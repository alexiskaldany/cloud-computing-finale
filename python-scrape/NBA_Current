{"cells":[{"cell_type":"markdown","metadata":{"id":"H263srD_VovJ"},"source":["# NBA DATA SCRAPE - CURRENT\n"]},{"cell_type":"markdown","metadata":{"id":"blj0qkSbdGbH"},"source":["## PACKAGE IMPORT / INSTALL"]},{"cell_type":"code","source":["## CAREFUL WITH INSTALL - MAY AFFECT FOLLOWING IMPORTS\n","\n","#!pip install basketball-reference-scraper==v1.0.3"],"metadata":{"id":"avpPj_5VUC0s"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":162,"status":"ok","timestamp":1649190868862,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"},"user_tz":240},"id":"OoMkES6eetcV","outputId":"ae028ef6-e82a-401c-e1dc-c977e505632c"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","IMPORT SUCCESS\n"]}],"source":["# LIBRARY IMPORTS\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from scipy import stats as stats\n","import statistics\n","\n","import requests\n","from bs4 import BeautifulSoup\n","import json\n","import time\n","import nltk\n","import re\n","\n","from google.colab import drive\n","\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","\n","#from tabulate import tabulate\n","#from difflib import get_close_matches\n","#from itertools import islice\n","\n","print(\"\\nIMPORT SUCCESS\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1138,"status":"ok","timestamp":1649190872287,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"},"user_tz":240},"id":"jbIe53iGVlKL","outputId":"cbc96a27-ac49-4c92-f6d7-d031e09d04d9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at drive; to attempt to forcibly remount, call drive.mount(\"drive\", force_remount=True).\n"]}],"source":["drive.mount('drive')"]},{"cell_type":"markdown","metadata":{"id":"tl6S1pqFYg7H"},"source":["# TEAM RANKINGS"]},{"cell_type":"markdown","metadata":{"id":"3YLevN6EbDZX"},"source":["## URL VARIABLES"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5V2hObc-38k8"},"outputs":[],"source":["# filtered stats of interest\n","\n","title_links = ['points-per-game', 'average-scoring-margin', 'field-goals-made-per-game', 'field-goals-attempted-per-game',\n","               'offensive-efficiency', 'defensive-efficiency', 'effective-possession-ratio', \n","               'effective-field-goal-pct', 'true-shooting-percentage', 'three-point-pct', 'two-point-pct', 'free-throw-pct',\n","               'three-pointers-made-per-game', 'three-pointers-attempted-per-game',\n","               'offensive-rebounds-per-game', 'defensive-rebounds-per-game', 'total-rebounds-per-game',\n","               'offensive-rebounding-pct', 'defensive-rebounding-pct', 'total-rebounding-percentage',\n","               'blocks-per-game', 'steals-per-game', 'assists-per-game', 'turnovers-per-game',\n","               'assist--per--turnover-ratio', 'win-pct-all-games', 'win-pct-close-games', 'possessions-per-game', 'personal-fouls-per-game',\n","               'opponent-points-per-game', 'opponent-average-scoring-margin', 'opponent-shooting-pct', 'opponent-effective-field-goal-pct',\n","               'opponent-three-point-pct', 'opponent-two-point-pct', 'opponent-free-throw-pct', 'opponent-true-shooting-percentage',\n","               'opponent-assists-per-game', 'opponent-turnovers-per-game', 'opponent-assist--per--turnover-ratio',\n","               'opponent-offensive-rebounds-per-game', 'opponent-defensive-rebounds-per-game', 'opponent-total-rebounds-per-game',\n","               'opponent-offensive-rebounding-pct', 'opponent-defensive-rebounding-pct',\n","               'opponent-blocks-per-game', 'opponent-steals-per-game', 'opponent-effective-possession-ratio',\n","\n","               ]\n","\n","team_links = ['points-per-game', 'average-scoring-margin',\n","             'offensive-efficiency', 'percent-of-points-from-2-pointers',\n","             'percent-of-points-from-3-pointers','percent-of-points-from-free-throws',\n","             'shooting-pct', 'effective-field-goal-pct', 'true-shooting-percentage', \n","             'three-point-pct', 'two-point-pct', 'free-throw-pct',\n","             'field-goals-made-per-game', 'field-goals-attempted-per-game',\n","             'three-pointers-made-per-game', 'three-pointers-attempted-per-game',\n","             'free-throws-made-per-game', 'free-throws-attempted-per-game',\n","             'three-point-rate', 'fta-per-fga', 'ftm-per-100-possessions',\n","             'offensive-rebounds-per-game', 'defensive-rebounds-per-game',\n","             'total-rebounds-per-game',\n","             'offensive-rebounding-pct', 'defensive-rebounding-pct',\n","             'total-rebounding-percentage', 'blocks-per-game',\n","             'steals-per-game',  'assists-per-game',\n","             'turnovers-per-game', 'assist--per--turnover-ratio',\n","             'assists-per-fgm', 'games-played', \n","              'possessions-per-game', 'extra-chances-per-game',\n","              'effective-possession-ratio', \n","                'win-pct-all-games', 'win-pct-close-games',]\n","             \n","opponent_links = ['personal-fouls-per-game'\n","             'opponent-points-per-game', 'opponent-average-scoring-margin',\n","             'defensive-efficiency', 'opponent-points-from-2-pointers',\n","             'opponent-points-from-3-pointers', 'opponent-percent-of-points-from-2-pointers',\n","             'opponent-percent-of-points-from-3-pointers', 'opponent-percent-of-points-from-free-throws',\n","             'opponent-shooting-pct', 'opponent-effective-field-goal-pct',\n","             'opponent-three-point-pct', 'opponent-two-point-pct', 'opponent-free-throw-pct', 'opponent-true-shooting-percentage',\n","             'opponent-field-goals-made-per-game', 'opponent-field-goals-attempted-per-game', 'opponent-three-pointers-made-per-game',\n","             'opponent-three-pointers-attempted-per-game', 'opponent-free-throws-made-per-game', 'opponent-free-throws-attempted-per-game',\n","             'opponent-three-point-rate', 'opponent-two-point-rate', 'opponent-fta-per-fga', 'opponent-ftm-per-100-possessions', \n","             'opponent-free-throw-rate', 'opponent-non-blocked-2-pt-pct', \n","             'opponent-offensive-rebounds-per-game', 'opponent-defensive-rebounds-per-game', 'opponent-team-rebounds-per-game', 'opponent-total-rebounds-per-game', 'opponent-offensive-rebounding-pct', 'opponent-defensive-rebounding-pct',\n","             'opponent-blocks-per-game', 'opponent-steals-per-game', 'opponent-block-pct', 'opponent-steals-perpossession',\n","             'opponent-steal-pct', 'opponent-assists-per-game', 'opponent-turnovers-per-game', 'opponent-assist--per--turnover-ratio',\n","             'opponent-assists-per-fgm', 'opponent-assists-per-possession', 'opponent-turnovers-per-possession',\n","             'opponent-turnover-pct', 'opponent-personal-fouls-per-game',\n","             'opponent-personal-fouls-per-possession', 'opponent-personal-foul-pct',\n","             'opponent-effective-possession-ratio', \n","             'opponent-win-pct-all-games', 'opponent-win-pct-close-games']\n","\n","# FULL LIST OF LINKS: ['points-per-game', 'average-scoring-margin', 'offensive-efficiency', 'floor-percentage', '1st-half-points-per-game', '2nd-half-points-per-game', 'overtime-points-per-game', 'average-1st-half-margin', 'average-2nd-half-margin', 'average-overtime-margin', 'points-from-2-pointers', 'points-from-3-pointers', 'percent-of-points-from-2-pointers', 'percent-of-points-from-3-pointers', 'percent-of-points-from-free-throws', 'shooting-pct', 'effective-field-goal-pct', 'three-point-pct', 'two-point-pct', 'free-throw-pct', 'true-shooting-percentage', 'field-goals-made-per-game', 'field-goals-attempted-per-game', 'three-pointers-made-per-game', 'three-pointers-attempted-per-game', 'free-throws-made-per-game', 'free-throws-attempted-per-game', 'three-point-rate', 'two-point-rate', 'fta-per-fga', 'ftm-per-100-possessions', 'free-throw-rate', 'non-blocked-2-pt-pct', 'offensive-rebounds-per-game', 'defensive-rebounds-per-game', 'team-rebounds-per-game', 'total-rebounds-per-game', 'offensive-rebounding-pct', 'defensive-rebounding-pct', 'total-rebounding-percentage', 'blocks-per-game', 'steals-per-game', 'block-pct', 'steals-perpossession', 'steal-pct', 'assists-per-game', 'turnovers-per-game', 'turnovers-per-possession', 'assist--per--turnover-ratio', 'assists-per-fgm', 'assists-per-possession', 'turnover-pct', 'personal-fouls-per-game', 'personal-fouls-per-possession', 'personal-foul-pct', 'opponent-points-per-game', 'opponent-average-scoring-margin', 'defensive-efficiency', 'opponent-floor-percentage', 'opponent-1st-half-points-per-game', 'opponent-2nd-half-points-per-game', 'opponent-overtime-points-per-game', 'opponent-points-from-2-pointers', 'opponent-points-from-3-pointers', 'opponent-percent-of-points-from-2-pointers', 'opponent-percent-of-points-from-3-pointers', 'opponent-percent-of-points-from-free-throws', 'opponent-shooting-pct', 'opponent-effective-field-goal-pct', 'opponent-three-point-pct', 'opponent-two-point-pct', 'opponent-free-throw-pct', 'opponent-true-shooting-percentage', 'opponent-field-goals-made-per-game', 'opponent-field-goals-attempted-per-game', 'opponent-three-pointers-made-per-game', 'opponent-three-pointers-attempted-per-game', 'opponent-free-throws-made-per-game', 'opponent-free-throws-attempted-per-game', 'opponent-three-point-rate', 'opponent-two-point-rate', 'opponent-fta-per-fga', 'opponent-ftm-per-100-possessions', 'opponent-free-throw-rate', 'opponent-non-blocked-2-pt-pct', 'opponent-offensive-rebounds-per-game', 'opponent-defensive-rebounds-per-game', 'opponent-team-rebounds-per-game', 'opponent-total-rebounds-per-game', 'opponent-offensive-rebounding-pct', 'opponent-defensive-rebounding-pct', 'opponent-blocks-per-game', 'opponent-steals-per-game', 'opponent-block-pct', 'opponent-steals-perpossession', 'opponent-steal-pct', 'opponent-assists-per-game', 'opponent-turnovers-per-game', 'opponent-assist--per--turnover-ratio', 'opponent-assists-per-fgm', 'opponent-assists-per-possession', 'opponent-turnovers-per-possession', 'opponent-turnover-pct', 'opponent-personal-fouls-per-game', 'opponent-personal-fouls-per-possession', 'opponent-personal-foul-pct', 'games-played', 'possessions-per-game', 'extra-chances-per-game', 'effective-possession-ratio', 'opponent-effective-possession-ratio', 'win-pct-all-games', 'win-pct-close-games', 'opponent-win-pct-all-games', 'opponent-win-pct-close-games']"]},{"cell_type":"markdown","metadata":{"id":"aGTHVdhWbeHZ"},"source":["## DATA SCRAPE"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"80E1O6qZAG9l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649190920430,"user_tz":240,"elapsed":19586,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"0b2fb146-9c56-4a3f-fdf1-52a47a054fee"},"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['points-per-game', 'average-scoring-margin', 'field-goals-made-per-game', 'field-goals-attempted-per-game', 'offensive-efficiency', 'defensive-efficiency', 'effective-possession-ratio', 'effective-field-goal-pct', 'true-shooting-percentage', 'three-point-pct', 'two-point-pct', 'free-throw-pct', 'three-pointers-made-per-game', 'three-pointers-attempted-per-game', 'offensive-rebounds-per-game', 'defensive-rebounds-per-game', 'total-rebounds-per-game', 'offensive-rebounding-pct', 'defensive-rebounding-pct', 'total-rebounding-percentage', 'blocks-per-game', 'steals-per-game', 'assists-per-game', 'turnovers-per-game', 'assist--per--turnover-ratio', 'win-pct-all-games', 'win-pct-close-games', 'possessions-per-game', 'personal-fouls-per-game', 'opponent-points-per-game', 'opponent-average-scoring-margin', 'opponent-shooting-pct', 'opponent-effective-field-goal-pct', 'opponent-three-point-pct', 'opponent-two-point-pct', 'opponent-free-throw-pct', 'opponent-true-shooting-percentage', 'opponent-assists-per-game', 'opponent-turnovers-per-game', 'opponent-assist--per--turnover-ratio', 'opponent-offensive-rebounds-per-game', 'opponent-defensive-rebounds-per-game', 'opponent-total-rebounds-per-game', 'opponent-offensive-rebounding-pct', 'opponent-defensive-rebounding-pct', 'opponent-blocks-per-game', 'opponent-steals-per-game', 'opponent-effective-possession-ratio'])\n"]}],"source":["## TEAMRANKINGS.COM STAT SCRAPE\n","\n","tr_url = 'https://www.teamrankings.com/nba/stat/'\n","base_url = 'https://www.teamrankings.com/'\n","\n","tr_cols = ['Rank', 'Team', '2021', 'Last 3', 'Last 1', 'Home', 'Away', '2020'] #, 'Stat'\n","tr_link_dict = {link : pd.DataFrame() for link in title_links} #columns=tr_cols\n","df = pd.DataFrame()\n","\n","for link in title_links:\n","  stat_page = requests.get(tr_url + link)\n","  soup = BeautifulSoup(stat_page.text, 'html.parser')\n","  table = soup.find_all('table')[0]\n","  cols = [each.text for each in table.find_all('th')]\n","  rows = table.find_all('tr')\n","  for row in rows:\n","    data = [each.text for each in row.find_all('td')]\n","    temp_df = pd.DataFrame([data])\n","      #df = df.append(temp_df, sort=True).reset_index(drop=True)\n","    tr_link_dict[link] = tr_link_dict[link].append(temp_df, sort=True).reset_index(drop=True)\n","    tr_link_dict[link] = tr_link_dict[link].dropna()\n","\n","  tr_link_dict[link].columns = cols\n","  tr_link_dict[link][link] = tr_link_dict[link]['2021']\n","  tr_link_dict[link].index = tr_link_dict[link]['Team']\n","  tr_link_dict[link].drop(columns=['Rank', 'Last 3', 'Last 1', 'Home', 'Away', '2020', '2021', 'Team'], inplace=True)\n","\n","print(tr_link_dict.keys())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":400},"executionInfo":{"elapsed":166,"status":"ok","timestamp":1648655309526,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"},"user_tz":240},"id":"BE5IDK5SoVsN","outputId":"550dcba5-762f-4a12-9d4a-96b4eb625c25"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           points-per-game  average-scoring-margin  field-goals-made-per-game  \\\n","Team                                                                            \n","Memphis              115.4                     6.3                       43.5   \n","Minnesota            115.4                     3.2                       41.5   \n","Phoenix              115.3                     8.5                       43.7   \n","Milwaukee            114.9                     3.7                       41.5   \n","Charlotte            114.7                     0.3                       42.4   \n","\n","           field-goals-attempted-per-game  offensive-efficiency  \\\n","Team                                                              \n","Memphis                              94.3                 1.109   \n","Minnesota                            91.0                 1.103   \n","Phoenix                              89.6                 1.122   \n","Milwaukee                            89.1                 1.115   \n","Charlotte                            91.7                 1.101   \n","\n","           defensive-efficiency  effective-field-goal-pct  \\\n","Team                                                        \n","Memphis                   1.048                      52.2   \n","Minnesota                 1.073                      53.7   \n","Phoenix                   1.040                      55.3   \n","Milwaukee                 1.080                      54.6   \n","Charlotte                 1.098                      53.9   \n","\n","           true-shooting-percentage  three-point-pct  two-point-pct  ...  \\\n","Team                                                                 ...   \n","Memphis                       109.6             34.9           52.1  ...   \n","Minnesota                     113.3             35.6           53.9  ...   \n","Phoenix                       116.3             37.0           55.3  ...   \n","Milwaukee                     115.0             36.8           54.1  ...   \n","Charlotte                     112.5             36.3           53.5  ...   \n","\n","           opponent-assist--per--turnover-ratio  effective-possession-ratio  \\\n","Team                                                                          \n","Memphis                                   1.665                       1.010   \n","Minnesota                                 1.591                       0.971   \n","Phoenix                                   1.548                       0.969   \n","Milwaukee                                 1.966                       0.969   \n","Charlotte                                 1.753                       0.979   \n","\n","           opponent-effective-possession-ratio  \\\n","Team                                             \n","Memphis                                  0.954   \n","Minnesota                                0.951   \n","Phoenix                                  0.960   \n","Milwaukee                                0.972   \n","Charlotte                                0.966   \n","\n","           opponent-offensive-rebounds-per-game  \\\n","Team                                              \n","Memphis                                    10.1   \n","Minnesota                                  11.1   \n","Phoenix                                    10.6   \n","Milwaukee                                  10.1   \n","Charlotte                                  11.5   \n","\n","           opponent-defensive-rebounds-per-game  \\\n","Team                                              \n","Memphis                                    32.8   \n","Minnesota                                  34.9   \n","Phoenix                                    33.6   \n","Milwaukee                                  34.3   \n","Charlotte                                  35.9   \n","\n","           opponent-total-rebounds-per-game  \\\n","Team                                          \n","Memphis                                51.9   \n","Minnesota                              54.9   \n","Phoenix                                52.2   \n","Milwaukee                              52.6   \n","Charlotte                              56.0   \n","\n","           opponent-offensive-rebounding-pct  \\\n","Team                                           \n","Memphis                                 22.2   \n","Minnesota                               24.9   \n","Phoenix                                 22.9   \n","Milwaukee                               21.6   \n","Charlotte                               25.3   \n","\n","           opponent-defensive-rebounding-pct  opponent-blocks-per-game  \\\n","Team                                                                     \n","Memphis                                 69.8                       6.3   \n","Minnesota                               75.5                       4.9   \n","Phoenix                                 77.7                       3.9   \n","Milwaukee                               77.0                       4.3   \n","Charlotte                               76.5                       4.7   \n","\n","           opponent-steals-per-game  \n","Team                                 \n","Memphis                         7.1  \n","Minnesota                       7.3  \n","Phoenix                         7.5  \n","Milwaukee                       7.3  \n","Charlotte                       7.5  \n","\n","[5 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-67d829e7-2957-4c74-b05c-39da2f3a0bf4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>points-per-game</th>\n","      <th>average-scoring-margin</th>\n","      <th>field-goals-made-per-game</th>\n","      <th>field-goals-attempted-per-game</th>\n","      <th>offensive-efficiency</th>\n","      <th>defensive-efficiency</th>\n","      <th>effective-field-goal-pct</th>\n","      <th>true-shooting-percentage</th>\n","      <th>three-point-pct</th>\n","      <th>two-point-pct</th>\n","      <th>...</th>\n","      <th>opponent-assist--per--turnover-ratio</th>\n","      <th>effective-possession-ratio</th>\n","      <th>opponent-effective-possession-ratio</th>\n","      <th>opponent-offensive-rebounds-per-game</th>\n","      <th>opponent-defensive-rebounds-per-game</th>\n","      <th>opponent-total-rebounds-per-game</th>\n","      <th>opponent-offensive-rebounding-pct</th>\n","      <th>opponent-defensive-rebounding-pct</th>\n","      <th>opponent-blocks-per-game</th>\n","      <th>opponent-steals-per-game</th>\n","    </tr>\n","    <tr>\n","      <th>Team</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Memphis</th>\n","      <td>115.4</td>\n","      <td>6.3</td>\n","      <td>43.5</td>\n","      <td>94.3</td>\n","      <td>1.109</td>\n","      <td>1.048</td>\n","      <td>52.2</td>\n","      <td>109.6</td>\n","      <td>34.9</td>\n","      <td>52.1</td>\n","      <td>...</td>\n","      <td>1.665</td>\n","      <td>1.010</td>\n","      <td>0.954</td>\n","      <td>10.1</td>\n","      <td>32.8</td>\n","      <td>51.9</td>\n","      <td>22.2</td>\n","      <td>69.8</td>\n","      <td>6.3</td>\n","      <td>7.1</td>\n","    </tr>\n","    <tr>\n","      <th>Minnesota</th>\n","      <td>115.4</td>\n","      <td>3.2</td>\n","      <td>41.5</td>\n","      <td>91.0</td>\n","      <td>1.103</td>\n","      <td>1.073</td>\n","      <td>53.7</td>\n","      <td>113.3</td>\n","      <td>35.6</td>\n","      <td>53.9</td>\n","      <td>...</td>\n","      <td>1.591</td>\n","      <td>0.971</td>\n","      <td>0.951</td>\n","      <td>11.1</td>\n","      <td>34.9</td>\n","      <td>54.9</td>\n","      <td>24.9</td>\n","      <td>75.5</td>\n","      <td>4.9</td>\n","      <td>7.3</td>\n","    </tr>\n","    <tr>\n","      <th>Phoenix</th>\n","      <td>115.3</td>\n","      <td>8.5</td>\n","      <td>43.7</td>\n","      <td>89.6</td>\n","      <td>1.122</td>\n","      <td>1.040</td>\n","      <td>55.3</td>\n","      <td>116.3</td>\n","      <td>37.0</td>\n","      <td>55.3</td>\n","      <td>...</td>\n","      <td>1.548</td>\n","      <td>0.969</td>\n","      <td>0.960</td>\n","      <td>10.6</td>\n","      <td>33.6</td>\n","      <td>52.2</td>\n","      <td>22.9</td>\n","      <td>77.7</td>\n","      <td>3.9</td>\n","      <td>7.5</td>\n","    </tr>\n","    <tr>\n","      <th>Milwaukee</th>\n","      <td>114.9</td>\n","      <td>3.7</td>\n","      <td>41.5</td>\n","      <td>89.1</td>\n","      <td>1.115</td>\n","      <td>1.080</td>\n","      <td>54.6</td>\n","      <td>115.0</td>\n","      <td>36.8</td>\n","      <td>54.1</td>\n","      <td>...</td>\n","      <td>1.966</td>\n","      <td>0.969</td>\n","      <td>0.972</td>\n","      <td>10.1</td>\n","      <td>34.3</td>\n","      <td>52.6</td>\n","      <td>21.6</td>\n","      <td>77.0</td>\n","      <td>4.3</td>\n","      <td>7.3</td>\n","    </tr>\n","    <tr>\n","      <th>Charlotte</th>\n","      <td>114.7</td>\n","      <td>0.3</td>\n","      <td>42.4</td>\n","      <td>91.7</td>\n","      <td>1.101</td>\n","      <td>1.098</td>\n","      <td>53.9</td>\n","      <td>112.5</td>\n","      <td>36.3</td>\n","      <td>53.5</td>\n","      <td>...</td>\n","      <td>1.753</td>\n","      <td>0.979</td>\n","      <td>0.966</td>\n","      <td>11.5</td>\n","      <td>35.9</td>\n","      <td>56.0</td>\n","      <td>25.3</td>\n","      <td>76.5</td>\n","      <td>4.7</td>\n","      <td>7.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 48 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67d829e7-2957-4c74-b05c-39da2f3a0bf4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-67d829e7-2957-4c74-b05c-39da2f3a0bf4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-67d829e7-2957-4c74-b05c-39da2f3a0bf4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}],"source":["tr_data_hub = pd.DataFrame()\n","\n","for stat in tr_link_dict:\n","  #tr_link_dict[stat].replace({'%',''}, regex=True)#.strip('%')\n","  tr_data_hub[stat] = tr_link_dict[stat]\n","  #tr_link_dict[stat] = float(tr_link_dict[stat].replace('%',''))\n","\n","objects = tr_data_hub.select_dtypes(['object'])\n","tr_data_hub[objects.columns] = objects.apply(lambda x: x.str.strip('%'))\n","\n","for stat in tr_data_hub:\n","  tr_data_hub[stat] = pd.to_numeric(tr_data_hub[stat])\n","\n","\n","#for col in tr_data_hub:\n","  #tr_data_hub[col] = tr_data_hub[col].astype(float)\n","  #pd.to_numeric(df['DataFrame Column'],errors='coerce')\n","\n","\n","#tr_data_hub[stat] = tr_data_hub[stat].replace('%','') #, regex=True\n","tr_data_hub.head()\n","#pd.DataFrame.from_dict(tr_link_dict.keys())\n","#tr_data_hub\n","#print(tr_link_dict['two-point-pct'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":463},"executionInfo":{"elapsed":196,"status":"ok","timestamp":1648655312927,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"},"user_tz":240},"id":"Vdmj6VyeZ9Cv","outputId":"8f68a21f-5500-4036-8089-c4176ca70a13"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       points-per-game  average-scoring-margin  field-goals-made-per-game  \\\n","count        30.000000               30.000000                  30.000000   \n","mean        110.180000                0.006667                  40.486667   \n","std           3.407132                4.734389                   1.620288   \n","min         103.800000               -8.500000                  37.600000   \n","25%         107.575000               -3.050000                  39.175000   \n","50%         110.550000                0.450000                  40.500000   \n","75%         112.850000                3.100000                  41.500000   \n","max         115.400000                8.500000                  43.700000   \n","\n","       field-goals-attempted-per-game  offensive-efficiency  \\\n","count                       30.000000             30.000000   \n","mean                        88.120000              1.082167   \n","std                          2.430326              0.030387   \n","min                         84.600000              1.012000   \n","25%                         86.225000              1.067250   \n","50%                         88.100000              1.088000   \n","75%                         89.250000              1.100750   \n","max                         94.300000              1.129000   \n","\n","       defensive-efficiency  effective-field-goal-pct  \\\n","count             30.000000                 30.000000   \n","mean               1.082067                 52.986667   \n","std                0.025902                  1.629837   \n","min                1.033000                 49.300000   \n","25%                1.070250                 52.250000   \n","50%                1.086000                 53.250000   \n","75%                1.097500                 53.975000   \n","max                1.128000                 55.700000   \n","\n","       true-shooting-percentage  three-point-pct  two-point-pct  ...  \\\n","count                 30.000000        30.000000      30.000000  ...   \n","mean                 111.963333        35.206667      53.143333  ...   \n","std                    3.157638         1.357720       1.916117  ...   \n","min                  105.100000        32.100000      49.500000  ...   \n","25%                  109.900000        34.550000      52.125000  ...   \n","50%                  112.200000        35.100000      53.550000  ...   \n","75%                  114.550000        36.225000      54.100000  ...   \n","max                  117.100000        37.400000      56.900000  ...   \n","\n","       opponent-assist--per--turnover-ratio  effective-possession-ratio  \\\n","count                             30.000000                   30.000000   \n","mean                               1.786233                    0.966700   \n","std                                0.141695                    0.016582   \n","min                                1.532000                    0.932000   \n","25%                                1.705750                    0.956500   \n","50%                                1.781500                    0.965000   \n","75%                                1.907000                    0.970750   \n","max                                2.021000                    1.010000   \n","\n","       opponent-effective-possession-ratio  \\\n","count                            30.000000   \n","mean                              0.966667   \n","std                               0.010646   \n","min                               0.945000   \n","25%                               0.957750   \n","50%                               0.968500   \n","75%                               0.972750   \n","max                               0.985000   \n","\n","       opponent-offensive-rebounds-per-game  \\\n","count                             30.000000   \n","mean                              10.380000   \n","std                                0.703881   \n","min                                9.300000   \n","25%                                9.700000   \n","50%                               10.350000   \n","75%                               10.975000   \n","max                               11.900000   \n","\n","       opponent-defensive-rebounds-per-game  opponent-total-rebounds-per-game  \\\n","count                             30.000000                         30.000000   \n","mean                              34.176667                         52.530000   \n","std                                1.377325                          1.986359   \n","min                               31.700000                         49.300000   \n","25%                               33.025000                         50.900000   \n","50%                               34.200000                         52.200000   \n","75%                               35.200000                         54.225000   \n","max                               37.400000                         56.200000   \n","\n","       opponent-offensive-rebounding-pct  opponent-defensive-rebounding-pct  \\\n","count                          30.000000                          30.000000   \n","mean                           23.290000                          76.740000   \n","std                             1.350696                           2.399943   \n","min                            21.300000                          69.800000   \n","25%                            22.050000                          75.825000   \n","50%                            23.250000                          76.800000   \n","75%                            24.550000                          78.550000   \n","max                            25.500000                          80.100000   \n","\n","       opponent-blocks-per-game  opponent-steals-per-game  \n","count                 30.000000                 30.000000  \n","mean                   4.743333                  7.610000  \n","std                    0.579348                  0.628819  \n","min                    3.700000                  6.400000  \n","25%                    4.300000                  7.300000  \n","50%                    4.750000                  7.450000  \n","75%                    5.000000                  7.900000  \n","max                    6.300000                  9.600000  \n","\n","[8 rows x 48 columns]"],"text/html":["\n","  <div id=\"df-9bc49c33-d5ce-4c9e-bad7-171240119271\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>points-per-game</th>\n","      <th>average-scoring-margin</th>\n","      <th>field-goals-made-per-game</th>\n","      <th>field-goals-attempted-per-game</th>\n","      <th>offensive-efficiency</th>\n","      <th>defensive-efficiency</th>\n","      <th>effective-field-goal-pct</th>\n","      <th>true-shooting-percentage</th>\n","      <th>three-point-pct</th>\n","      <th>two-point-pct</th>\n","      <th>...</th>\n","      <th>opponent-assist--per--turnover-ratio</th>\n","      <th>effective-possession-ratio</th>\n","      <th>opponent-effective-possession-ratio</th>\n","      <th>opponent-offensive-rebounds-per-game</th>\n","      <th>opponent-defensive-rebounds-per-game</th>\n","      <th>opponent-total-rebounds-per-game</th>\n","      <th>opponent-offensive-rebounding-pct</th>\n","      <th>opponent-defensive-rebounding-pct</th>\n","      <th>opponent-blocks-per-game</th>\n","      <th>opponent-steals-per-game</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>...</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>110.180000</td>\n","      <td>0.006667</td>\n","      <td>40.486667</td>\n","      <td>88.120000</td>\n","      <td>1.082167</td>\n","      <td>1.082067</td>\n","      <td>52.986667</td>\n","      <td>111.963333</td>\n","      <td>35.206667</td>\n","      <td>53.143333</td>\n","      <td>...</td>\n","      <td>1.786233</td>\n","      <td>0.966700</td>\n","      <td>0.966667</td>\n","      <td>10.380000</td>\n","      <td>34.176667</td>\n","      <td>52.530000</td>\n","      <td>23.290000</td>\n","      <td>76.740000</td>\n","      <td>4.743333</td>\n","      <td>7.610000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.407132</td>\n","      <td>4.734389</td>\n","      <td>1.620288</td>\n","      <td>2.430326</td>\n","      <td>0.030387</td>\n","      <td>0.025902</td>\n","      <td>1.629837</td>\n","      <td>3.157638</td>\n","      <td>1.357720</td>\n","      <td>1.916117</td>\n","      <td>...</td>\n","      <td>0.141695</td>\n","      <td>0.016582</td>\n","      <td>0.010646</td>\n","      <td>0.703881</td>\n","      <td>1.377325</td>\n","      <td>1.986359</td>\n","      <td>1.350696</td>\n","      <td>2.399943</td>\n","      <td>0.579348</td>\n","      <td>0.628819</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>103.800000</td>\n","      <td>-8.500000</td>\n","      <td>37.600000</td>\n","      <td>84.600000</td>\n","      <td>1.012000</td>\n","      <td>1.033000</td>\n","      <td>49.300000</td>\n","      <td>105.100000</td>\n","      <td>32.100000</td>\n","      <td>49.500000</td>\n","      <td>...</td>\n","      <td>1.532000</td>\n","      <td>0.932000</td>\n","      <td>0.945000</td>\n","      <td>9.300000</td>\n","      <td>31.700000</td>\n","      <td>49.300000</td>\n","      <td>21.300000</td>\n","      <td>69.800000</td>\n","      <td>3.700000</td>\n","      <td>6.400000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>107.575000</td>\n","      <td>-3.050000</td>\n","      <td>39.175000</td>\n","      <td>86.225000</td>\n","      <td>1.067250</td>\n","      <td>1.070250</td>\n","      <td>52.250000</td>\n","      <td>109.900000</td>\n","      <td>34.550000</td>\n","      <td>52.125000</td>\n","      <td>...</td>\n","      <td>1.705750</td>\n","      <td>0.956500</td>\n","      <td>0.957750</td>\n","      <td>9.700000</td>\n","      <td>33.025000</td>\n","      <td>50.900000</td>\n","      <td>22.050000</td>\n","      <td>75.825000</td>\n","      <td>4.300000</td>\n","      <td>7.300000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>110.550000</td>\n","      <td>0.450000</td>\n","      <td>40.500000</td>\n","      <td>88.100000</td>\n","      <td>1.088000</td>\n","      <td>1.086000</td>\n","      <td>53.250000</td>\n","      <td>112.200000</td>\n","      <td>35.100000</td>\n","      <td>53.550000</td>\n","      <td>...</td>\n","      <td>1.781500</td>\n","      <td>0.965000</td>\n","      <td>0.968500</td>\n","      <td>10.350000</td>\n","      <td>34.200000</td>\n","      <td>52.200000</td>\n","      <td>23.250000</td>\n","      <td>76.800000</td>\n","      <td>4.750000</td>\n","      <td>7.450000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>112.850000</td>\n","      <td>3.100000</td>\n","      <td>41.500000</td>\n","      <td>89.250000</td>\n","      <td>1.100750</td>\n","      <td>1.097500</td>\n","      <td>53.975000</td>\n","      <td>114.550000</td>\n","      <td>36.225000</td>\n","      <td>54.100000</td>\n","      <td>...</td>\n","      <td>1.907000</td>\n","      <td>0.970750</td>\n","      <td>0.972750</td>\n","      <td>10.975000</td>\n","      <td>35.200000</td>\n","      <td>54.225000</td>\n","      <td>24.550000</td>\n","      <td>78.550000</td>\n","      <td>5.000000</td>\n","      <td>7.900000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>115.400000</td>\n","      <td>8.500000</td>\n","      <td>43.700000</td>\n","      <td>94.300000</td>\n","      <td>1.129000</td>\n","      <td>1.128000</td>\n","      <td>55.700000</td>\n","      <td>117.100000</td>\n","      <td>37.400000</td>\n","      <td>56.900000</td>\n","      <td>...</td>\n","      <td>2.021000</td>\n","      <td>1.010000</td>\n","      <td>0.985000</td>\n","      <td>11.900000</td>\n","      <td>37.400000</td>\n","      <td>56.200000</td>\n","      <td>25.500000</td>\n","      <td>80.100000</td>\n","      <td>6.300000</td>\n","      <td>9.600000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 48 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9bc49c33-d5ce-4c9e-bad7-171240119271')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9bc49c33-d5ce-4c9e-bad7-171240119271 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9bc49c33-d5ce-4c9e-bad7-171240119271');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}],"source":["tr_data_hub.describe()"]},{"cell_type":"markdown","metadata":{"id":"YN7afttcOYjY"},"source":["## DATA EXPORT"]},{"cell_type":"code","source":["tr_filepath = 'drive/My Drive/GWU/TEAM-7/data/tr_data_hub_3-30-22'"],"metadata":{"id":"ESXy9hACgaKI"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ASQkOCC33kux"},"outputs":[],"source":["tr_data_hub.to_excel(tr_filepath + '.xlsx', index=True)\n","tr_data_hub.to_csv(tr_filepath + '.csv', index=True)"]},{"cell_type":"markdown","metadata":{"id":"-j1uCEZYazez"},"source":["## DATA IMPORT"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fx7mOC0Q321n"},"outputs":[],"source":["tr_data_hub = pd.read_excel(tr_filepath + '.xlsx', index_col='Team')\n","#tr_data_hub = pd.read_csv(tr_filepath + '.csv', index_col='Team')"]},{"cell_type":"markdown","source":["## FEATURE ENGINEERING"],"metadata":{"id":"0s55pw4uGvFW"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"96dYjioVbC0r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649046215837,"user_tz":240,"elapsed":388,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"4c82a784-5a35-415f-a19c-b11a74adc8c9"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 30 entries, Memphis to Okla City\n","Data columns (total 48 columns):\n"," #   Column                                Non-Null Count  Dtype  \n","---  ------                                --------------  -----  \n"," 0   points-per-game                       30 non-null     float64\n"," 1   average-scoring-margin                30 non-null     float64\n"," 2   field-goals-made-per-game             30 non-null     float64\n"," 3   field-goals-attempted-per-game        30 non-null     float64\n"," 4   offensive-efficiency                  30 non-null     float64\n"," 5   defensive-efficiency                  30 non-null     float64\n"," 6   effective-field-goal-pct              30 non-null     float64\n"," 7   true-shooting-percentage              30 non-null     float64\n"," 8   three-point-pct                       30 non-null     float64\n"," 9   two-point-pct                         30 non-null     float64\n"," 10  free-throw-pct                        30 non-null     float64\n"," 11  three-pointers-made-per-game          30 non-null     float64\n"," 12  three-pointers-attempted-per-game     30 non-null     float64\n"," 13  offensive-rebounds-per-game           30 non-null     float64\n"," 14  defensive-rebounds-per-game           30 non-null     float64\n"," 15  total-rebounds-per-game               30 non-null     float64\n"," 16  offensive-rebounding-pct              30 non-null     float64\n"," 17  defensive-rebounding-pct              30 non-null     float64\n"," 18  total-rebounding-percentage           30 non-null     float64\n"," 19  blocks-per-game                       30 non-null     float64\n"," 20  steals-per-game                       30 non-null     float64\n"," 21  assists-per-game                      30 non-null     float64\n"," 22  turnovers-per-game                    30 non-null     float64\n"," 23  assist--per--turnover-ratio           30 non-null     float64\n"," 24  win-pct-all-games                     30 non-null     float64\n"," 25  win-pct-close-games                   30 non-null     float64\n"," 26  possessions-per-game                  30 non-null     float64\n"," 27  personal-fouls-per-game               30 non-null     float64\n"," 28  opponent-points-per-game              30 non-null     float64\n"," 29  opponent-average-scoring-margin       30 non-null     float64\n"," 30  opponent-shooting-pct                 30 non-null     float64\n"," 31  opponent-effective-field-goal-pct     30 non-null     float64\n"," 32  opponent-three-point-pct              30 non-null     float64\n"," 33  opponent-two-point-pct                30 non-null     float64\n"," 34  opponent-free-throw-pct               30 non-null     float64\n"," 35  opponent-true-shooting-percentage     30 non-null     float64\n"," 36  opponent-assists-per-game             30 non-null     float64\n"," 37  opponent-turnovers-per-game           30 non-null     float64\n"," 38  opponent-assist--per--turnover-ratio  30 non-null     float64\n"," 39  effective-possession-ratio            30 non-null     float64\n"," 40  opponent-effective-possession-ratio   30 non-null     float64\n"," 41  opponent-offensive-rebounds-per-game  30 non-null     float64\n"," 42  opponent-defensive-rebounds-per-game  30 non-null     float64\n"," 43  opponent-total-rebounds-per-game      30 non-null     float64\n"," 44  opponent-offensive-rebounding-pct     30 non-null     float64\n"," 45  opponent-defensive-rebounding-pct     30 non-null     float64\n"," 46  opponent-blocks-per-game              30 non-null     float64\n"," 47  opponent-steals-per-game              30 non-null     float64\n","dtypes: float64(48)\n","memory usage: 11.5+ KB\n"]}],"source":["tr_data_hub.info()"]},{"cell_type":"code","source":["# SCORING MARGIN / POSSESSIONS\n","tr_data_hub['net-avg-scoring-margin'] = tr_data_hub['average-scoring-margin'] - tr_data_hub['opponent-average-scoring-margin']\n","tr_data_hub['net-points-per-game'] = tr_data_hub['points-per-game'] - tr_data_hub['opponent-points-per-game']\n","tr_data_hub['net-effective-possession-ratio'] = tr_data_hub['effective-possession-ratio'] - tr_data_hub['opponent-effective-possession-ratio']\n","tr_data_hub['net-adj-efficiency'] = tr_data_hub['offensive-efficiency'] - tr_data_hub['defensive-efficiency']\n","\n","# NET SHOOTING PERCENTAGES\n","tr_data_hub['net-effective-field-goal-pct'] = tr_data_hub['effective-field-goal-pct'] - tr_data_hub['opponent-effective-field-goal-pct']\n","tr_data_hub['net-true-shooting-percentage'] = tr_data_hub['true-shooting-percentage'] - tr_data_hub['opponent-true-shooting-percentage']\n","\n","# STOCKS = STEALS + BLOCKS\n","tr_data_hub['stocks-per-game'] = tr_data_hub['steals-per-game'] + tr_data_hub['blocks-per-game']\n","tr_data_hub['opponent-stocks-per-game'] = tr_data_hub['opponent-steals-per-game'] + tr_data_hub['opponent-blocks-per-game']\n","tr_data_hub['net-stocks-per-game'] = tr_data_hub['stocks-per-game'] - tr_data_hub['opponent-stocks-per-game']\n","\n","# AST/TO = TURNOVERS / ASSISTS\n","tr_data_hub['total-turnovers-per-game'] = tr_data_hub['turnovers-per-game'] + tr_data_hub['opponent-turnovers-per-game']\n","tr_data_hub['net-assist--per--turnover-ratio'] = tr_data_hub['assist--per--turnover-ratio'] - tr_data_hub['opponent-assist--per--turnover-ratio']\n","\n","# REBOUNDS\n","tr_data_hub['net-total-rebounds-per-game'] = tr_data_hub['total-rebounds-per-game'] - tr_data_hub['opponent-total-rebounds-per-game']\n","tr_data_hub['net-off-rebound-pct'] = tr_data_hub['offensive-rebounding-pct'] - tr_data_hub['opponent-offensive-rebounding-pct']\n","tr_data_hub['net-def-rebound-pct'] = tr_data_hub['defensive-rebounding-pct'] - tr_data_hub['opponent-defensive-rebounding-pct']\n","  \n","  # ALTERNATE CALC - yields different performance than above\n","    #tr_data_hub['net-off-rebound-pct'] = tr_data_hub['offensive-rebounding-pct'] - tr_data_hub['opponent-defensive-rebounding-pct']\n","    #tr_data_hub['net-def-rebound-pct'] = tr_data_hub['defensive-rebounding-pct'] - tr_data_hub['opponent-offensive-rebounding-pct']\n","\n","tr_data_hub.info()\n","#tr_data_hub.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2EEiLuEPGxcO","executionInfo":{"status":"ok","timestamp":1649128552694,"user_tz":240,"elapsed":165,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"b494df38-64d3-4008-bab5-bcf8f3b2f6cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 30 entries, Memphis to Okla City\n","Data columns (total 62 columns):\n"," #   Column                                Non-Null Count  Dtype  \n","---  ------                                --------------  -----  \n"," 0   points-per-game                       30 non-null     float64\n"," 1   average-scoring-margin                30 non-null     float64\n"," 2   field-goals-made-per-game             30 non-null     float64\n"," 3   field-goals-attempted-per-game        30 non-null     float64\n"," 4   offensive-efficiency                  30 non-null     float64\n"," 5   defensive-efficiency                  30 non-null     float64\n"," 6   effective-field-goal-pct              30 non-null     float64\n"," 7   true-shooting-percentage              30 non-null     float64\n"," 8   three-point-pct                       30 non-null     float64\n"," 9   two-point-pct                         30 non-null     float64\n"," 10  free-throw-pct                        30 non-null     float64\n"," 11  three-pointers-made-per-game          30 non-null     float64\n"," 12  three-pointers-attempted-per-game     30 non-null     float64\n"," 13  offensive-rebounds-per-game           30 non-null     float64\n"," 14  defensive-rebounds-per-game           30 non-null     float64\n"," 15  total-rebounds-per-game               30 non-null     float64\n"," 16  offensive-rebounding-pct              30 non-null     float64\n"," 17  defensive-rebounding-pct              30 non-null     float64\n"," 18  total-rebounding-percentage           30 non-null     float64\n"," 19  blocks-per-game                       30 non-null     float64\n"," 20  steals-per-game                       30 non-null     float64\n"," 21  assists-per-game                      30 non-null     float64\n"," 22  turnovers-per-game                    30 non-null     float64\n"," 23  assist--per--turnover-ratio           30 non-null     float64\n"," 24  win-pct-all-games                     30 non-null     float64\n"," 25  win-pct-close-games                   30 non-null     float64\n"," 26  possessions-per-game                  30 non-null     float64\n"," 27  personal-fouls-per-game               30 non-null     float64\n"," 28  opponent-points-per-game              30 non-null     float64\n"," 29  opponent-average-scoring-margin       30 non-null     float64\n"," 30  opponent-shooting-pct                 30 non-null     float64\n"," 31  opponent-effective-field-goal-pct     30 non-null     float64\n"," 32  opponent-three-point-pct              30 non-null     float64\n"," 33  opponent-two-point-pct                30 non-null     float64\n"," 34  opponent-free-throw-pct               30 non-null     float64\n"," 35  opponent-true-shooting-percentage     30 non-null     float64\n"," 36  opponent-assists-per-game             30 non-null     float64\n"," 37  opponent-turnovers-per-game           30 non-null     float64\n"," 38  opponent-assist--per--turnover-ratio  30 non-null     float64\n"," 39  effective-possession-ratio            30 non-null     float64\n"," 40  opponent-effective-possession-ratio   30 non-null     float64\n"," 41  opponent-offensive-rebounds-per-game  30 non-null     float64\n"," 42  opponent-defensive-rebounds-per-game  30 non-null     float64\n"," 43  opponent-total-rebounds-per-game      30 non-null     float64\n"," 44  opponent-offensive-rebounding-pct     30 non-null     float64\n"," 45  opponent-defensive-rebounding-pct     30 non-null     float64\n"," 46  opponent-blocks-per-game              30 non-null     float64\n"," 47  opponent-steals-per-game              30 non-null     float64\n"," 48  net-avg-scoring-margin                30 non-null     float64\n"," 49  net-points-per-game                   30 non-null     float64\n"," 50  net-effective-possession-ratio        30 non-null     float64\n"," 51  net-adj-efficiency                    30 non-null     float64\n"," 52  net-effective-field-goal-pct          30 non-null     float64\n"," 53  net-true-shooting-percentage          30 non-null     float64\n"," 54  stocks-per-game                       30 non-null     float64\n"," 55  opponent-stocks-per-game              30 non-null     float64\n"," 56  net-stocks-per-game                   30 non-null     float64\n"," 57  total-turnovers-per-game              30 non-null     float64\n"," 58  net-assist--per--turnover-ratio       30 non-null     float64\n"," 59  net-total-rebounds-per-game           30 non-null     float64\n"," 60  net-off-rebound-pct                   30 non-null     float64\n"," 61  net-def-rebound-pct                   30 non-null     float64\n","dtypes: float64(62)\n","memory usage: 14.8+ KB\n"]}]},{"cell_type":"markdown","source":["## FINAL DATA EXPORT"],"metadata":{"id":"YCAkfWTKuIoM"}},{"cell_type":"code","source":["#tr_data_hub.to_excel(tr_filepath + '.xlsx', index=True)\n","#tr_data_hub.to_csv(tr_filepath + '.csv', index=True)"],"metadata":{"id":"2Gf4peyM0OlH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1_knawrQLts7"},"source":["## DATA VIZ"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":333},"executionInfo":{"elapsed":161,"status":"ok","timestamp":1649128557210,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"},"user_tz":240},"id":"9oefw_t4LwjV","outputId":"570f7b28-76be-4408-fc98-41bcdf8914fd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           win-pct-all-games  net-adj-efficiency  \\\n","Team                                               \n","Memphis                0.697               0.061   \n","Minnesota              0.566               0.030   \n","Phoenix                0.813               0.082   \n","Milwaukee              0.627               0.035   \n","Charlotte              0.513               0.003   \n","\n","           net-effective-field-goal-pct  net-true-shooting-percentage  \\\n","Team                                                                    \n","Memphis                             0.3                          -0.4   \n","Minnesota                           0.7                           0.2   \n","Phoenix                             4.4                           8.4   \n","Milwaukee                           1.4                           3.9   \n","Charlotte                          -0.1                          -1.0   \n","\n","           net-avg-scoring-margin  net-assist--per--turnover-ratio  \\\n","Team                                                                 \n","Memphis                      12.6                            0.282   \n","Minnesota                     6.4                            0.192   \n","Phoenix                      17.0                            0.581   \n","Milwaukee                     7.4                           -0.205   \n","Charlotte                     0.6                            0.345   \n","\n","           net-stocks-per-game  \n","Team                            \n","Memphis                    3.0  \n","Minnesota                  2.1  \n","Phoenix                    1.6  \n","Milwaukee                 -0.1  \n","Charlotte                  1.3  "],"text/html":["\n","  <div id=\"df-015a59e7-e55c-4e5e-aab9-4657c0d2c01e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>win-pct-all-games</th>\n","      <th>net-adj-efficiency</th>\n","      <th>net-effective-field-goal-pct</th>\n","      <th>net-true-shooting-percentage</th>\n","      <th>net-avg-scoring-margin</th>\n","      <th>net-assist--per--turnover-ratio</th>\n","      <th>net-stocks-per-game</th>\n","    </tr>\n","    <tr>\n","      <th>Team</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Memphis</th>\n","      <td>0.697</td>\n","      <td>0.061</td>\n","      <td>0.3</td>\n","      <td>-0.4</td>\n","      <td>12.6</td>\n","      <td>0.282</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>Minnesota</th>\n","      <td>0.566</td>\n","      <td>0.030</td>\n","      <td>0.7</td>\n","      <td>0.2</td>\n","      <td>6.4</td>\n","      <td>0.192</td>\n","      <td>2.1</td>\n","    </tr>\n","    <tr>\n","      <th>Phoenix</th>\n","      <td>0.813</td>\n","      <td>0.082</td>\n","      <td>4.4</td>\n","      <td>8.4</td>\n","      <td>17.0</td>\n","      <td>0.581</td>\n","      <td>1.6</td>\n","    </tr>\n","    <tr>\n","      <th>Milwaukee</th>\n","      <td>0.627</td>\n","      <td>0.035</td>\n","      <td>1.4</td>\n","      <td>3.9</td>\n","      <td>7.4</td>\n","      <td>-0.205</td>\n","      <td>-0.1</td>\n","    </tr>\n","    <tr>\n","      <th>Charlotte</th>\n","      <td>0.513</td>\n","      <td>0.003</td>\n","      <td>-0.1</td>\n","      <td>-1.0</td>\n","      <td>0.6</td>\n","      <td>0.345</td>\n","      <td>1.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-015a59e7-e55c-4e5e-aab9-4657c0d2c01e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-015a59e7-e55c-4e5e-aab9-4657c0d2c01e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-015a59e7-e55c-4e5e-aab9-4657c0d2c01e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}],"source":["# Create variable for primary features of interest\n","tr_top_features = ['win-pct-all-games', 'net-adj-efficiency',\n","                   'net-effective-field-goal-pct',  'net-true-shooting-percentage', \n","                   'net-avg-scoring-margin', # 'net-points-per-game', \n","                   'net-assist--per--turnover-ratio', 'net-stocks-per-game',]# 'net-effective-possession-ratio',\n","\n","tr_top_features_df = tr_data_hub[tr_top_features]\n","\n","team_off_stats = ['win-pct-all-games', 'average-scoring-margin','offensive-efficiency', 'defensive-efficiency',\n","              'effective-field-goal-pct', 'true-shooting-percentage', 'stocks-per-game',\n","              'total-rebounding-percentage',\n","              'assist--per--turnover-ratio',  'effective-possession-ratio']\n","\n","team_def_stats = ['win-pct-all-games', 'average-scoring-margin' 'defensive-efficiency',\n","              'opponent-effective-field-goal-pct', 'opponent-true-shooting-percentage', 'opponent-stocks-per-game',\n","              #'opponent-total-rebounding-percentage',\n","              'opponent-assist--per--turnover-ratio',  'opponent-effective-possession-ratio']\n","\n","team_stats_df = tr_data_hub[['win-pct-all-games', 'average-scoring-margin','offensive-efficiency', 'defensive-efficiency',\n","              'effective-field-goal-pct', 'true-shooting-percentage', 'stocks-per-game',\n","              'total-rebounding-percentage',\n","              'assist--per--turnover-ratio',  'effective-possession-ratio']]\n","\n","team_off_stats_df = tr_data_hub[['win-pct-all-games', 'average-scoring-margin','offensive-efficiency',\n","              'effective-field-goal-pct', 'true-shooting-percentage', 'stocks-per-game',\n","              'total-rebounding-percentage',\n","              'assist--per--turnover-ratio',  'effective-possession-ratio']]\n","\n","# Features removed or combined to reduce multicollinearity\n","  # 'offensive-efficiency', 'defensive-efficiency',\n","  # 'effective-field-goal-pct', 'true-shooting-percentage',\n","  # 'opponent-effective-field-goal-pct',  'opponent-true-shooting-percentage', \n","  # 'points-per-game', 'opponent-points-per-game', \n","  # 'stocks-per-game', 'opponent-stocks-per-game', \n","  #  'win-pct-close-games', \n","  # 'possessions-per-game', 'personal-fouls-per-game',\n","  # 'field-goals-attempted-per-game', 'three-pointers-attempted-per-game',  'field-goals-made-per-game', \n","  # 'opponent-assist--per--turnover-ratio', 'assist--per--turnover-ratio', \n","  # 'average-scoring-margin', 'opponent-average-scoring-margin', 'total-turnovers-per-game', \n","  # 'blocks-per-game', 'steals-per-game', 'opponent-steals-per-game', 'opponent-blocks-per-game',\n","  # 'effective-possession-ratio', 'opponent-effective-possession-ratio',\n","  # 'assists-per-game', 'turnovers-per-game', 'opponent-assists-per-game', 'opponent-turnovers-per-game',\n","  # 'three-point-pct', 'two-point-pct', 'free-throw-pct', 'three-pointers-made-per-game', \n","  # 'opponent-shooting-pct', 'opponent-two-point-pct','opponent-three-point-pct', 'opponent-free-throw-pct',\n","  # 'net-rebounds-per-game',\n","  # 'total-rebounding-percentage', 'opponent-offensive-rebounding-pct', 'opponent-defensive-rebounding-pct', # 'net-off-rebound-pct', 'net-def-rebound-pct', \n","  # 'offensive-rebounding-pct', 'defensive-rebounding-pct', 'defensive-rebounds-per-game','total-rebounds-per-game', 'offensive-rebounds-per-game', \n","  # 'opponent-offensive-rebounds-per-game', 'opponent-defensive-rebounds-per-game', 'opponent-total-rebounds-per-game', \n","\n","tr_top_features_df.head() #.reset_index()"]},{"cell_type":"code","source":["# Evaluate range of top features \n","tr_top_features_df.describe()\n","#team_stats_df.describe()"],"metadata":{"id":"9qjPF7eKA7AF","colab":{"base_uri":"https://localhost:8080/","height":378},"executionInfo":{"status":"ok","timestamp":1649128559807,"user_tz":240,"elapsed":156,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"dcef7e47-0793-451f-8745-6c0f13735655"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       win-pct-all-games  net-adj-efficiency  net-effective-field-goal-pct  \\\n","count          30.000000           30.000000                     30.000000   \n","mean            0.499933            0.000100                      0.006667   \n","std             0.140898            0.046382                      2.385579   \n","min             0.263000           -0.082000                     -4.800000   \n","25%             0.413000           -0.030250                     -1.900000   \n","50%             0.519500            0.004500                      0.350000   \n","75%             0.607750            0.029500                      1.550000   \n","max             0.813000            0.082000                      4.400000   \n","\n","       net-true-shooting-percentage  net-avg-scoring-margin  \\\n","count                     30.000000               30.000000   \n","mean                       0.033333                0.013333   \n","std                        4.729171                9.468777   \n","min                       -9.300000              -17.000000   \n","25%                       -4.050000               -6.100000   \n","50%                        0.250000                0.900000   \n","75%                        3.500000                6.200000   \n","max                        8.400000               17.000000   \n","\n","       net-assist--per--turnover-ratio  net-stocks-per-game  \n","count                        30.000000            30.000000  \n","mean                          0.000200             0.006667  \n","std                           0.250185             1.407353  \n","min                          -0.396000            -3.300000  \n","25%                          -0.197250            -0.750000  \n","50%                          -0.009500             0.000000  \n","75%                           0.186500             1.050000  \n","max                           0.581000             3.000000  "],"text/html":["\n","  <div id=\"df-7495f3ce-d261-415c-bc47-886a62e74fcd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>win-pct-all-games</th>\n","      <th>net-adj-efficiency</th>\n","      <th>net-effective-field-goal-pct</th>\n","      <th>net-true-shooting-percentage</th>\n","      <th>net-avg-scoring-margin</th>\n","      <th>net-assist--per--turnover-ratio</th>\n","      <th>net-stocks-per-game</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","      <td>30.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.499933</td>\n","      <td>0.000100</td>\n","      <td>0.006667</td>\n","      <td>0.033333</td>\n","      <td>0.013333</td>\n","      <td>0.000200</td>\n","      <td>0.006667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.140898</td>\n","      <td>0.046382</td>\n","      <td>2.385579</td>\n","      <td>4.729171</td>\n","      <td>9.468777</td>\n","      <td>0.250185</td>\n","      <td>1.407353</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.263000</td>\n","      <td>-0.082000</td>\n","      <td>-4.800000</td>\n","      <td>-9.300000</td>\n","      <td>-17.000000</td>\n","      <td>-0.396000</td>\n","      <td>-3.300000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.413000</td>\n","      <td>-0.030250</td>\n","      <td>-1.900000</td>\n","      <td>-4.050000</td>\n","      <td>-6.100000</td>\n","      <td>-0.197250</td>\n","      <td>-0.750000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.519500</td>\n","      <td>0.004500</td>\n","      <td>0.350000</td>\n","      <td>0.250000</td>\n","      <td>0.900000</td>\n","      <td>-0.009500</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.607750</td>\n","      <td>0.029500</td>\n","      <td>1.550000</td>\n","      <td>3.500000</td>\n","      <td>6.200000</td>\n","      <td>0.186500</td>\n","      <td>1.050000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>0.813000</td>\n","      <td>0.082000</td>\n","      <td>4.400000</td>\n","      <td>8.400000</td>\n","      <td>17.000000</td>\n","      <td>0.581000</td>\n","      <td>3.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7495f3ce-d261-415c-bc47-886a62e74fcd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7495f3ce-d261-415c-bc47-886a62e74fcd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7495f3ce-d261-415c-bc47-886a62e74fcd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# create correlation variables relative to rest of DataFrame\n","win_pct_top_corr = tr_data_hub[tr_top_features].corr()[['win-pct-all-games']].sort_values(by = 'win-pct-all-games', ascending = False)\n","\n","win_pct_all_corr = tr_data_hub.corr()[['win-pct-all-games']].sort_values(by = 'win-pct-all-games', ascending = False)\n","win_pct_close_corr = tr_data_hub.corr()[['win-pct-close-games']].sort_values(by = 'win-pct-close-games', ascending = False)\n","\n","# generate heatmap to visualize correlation variable\n","plt.figure(figsize=(8,8))\n","sns.heatmap(win_pct_top_corr, annot = True, cmap = 'mako', vmin=-1, vmax=1, linecolor = 'white', linewidth = 2);\n","#sns.heatmap(win_pct_all_corr, annot = True, cmap = 'mako', vmin=-1, vmax=1, linecolor = 'white', linewidth = 2);\n","#sns.heatmap(win_pct_close_corr, annot = True, cmap = 'flare', vmin=-1, vmax=1, linecolor = 'white', linewidth = 2);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"8kaSASccw6VR","executionInfo":{"status":"ok","timestamp":1649050853590,"user_tz":240,"elapsed":895,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"4b960803-922b-4a6c-9025-44857b78967f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## STANDARD SCALER"],"metadata":{"id":"TnPKP0mnw9vu"}},{"cell_type":"code","source":["## SCALE DATA\n","ss = StandardScaler()\n","\n","tr_fit = ss.fit(tr_top_features_df)\n","tr_transform = ss.transform(tr_top_features_df)"],"metadata":{"id":"kPkmqOs4R7RD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# HEATMAP (SCALED FEATURES)\n","plt.figure(figsize=(20,20))\n","sns.heatmap(tr_transform, xticklabels = tr_top_features_df.columns, yticklabels = tr_top_features_df.index, annot = True, cmap = 'magma', linecolor = 'white', linewidth = 2); #vmin=-1, vmax=1,\n","#sns.heatmap(win_pct_all_corr, annot = True, cmap = 'mako', vmin=-1, vmax=1, linecolor = 'white', linewidth = 2);\n","#sns.heatmap(win_pct_close_corr, annot = True, cmap = 'flare', vmin=-1, vmax=1, linecolor = 'white', linewidth = 2);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"SsXz1QX8GYGD","executionInfo":{"status":"ok","timestamp":1649050900699,"user_tz":240,"elapsed":1637,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"225f9a50-4d9e-473c-c48f-2b306983f4f1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x1440 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ngxQEeilLLH6"},"outputs":[],"source":["# SCATTERPLOT - \n","plt.figure(figsize=(8,8))\n","sns.scatterplot(data=tr_data_hub, x='offensive-efficiency', y='defensive-efficiency', palette='mako', markers=True)\n","plt.title('OFF. VS. DEF. EFFICIENCY (BY CONFERENCE)', fontsize=16)\n","plt.xlabel('OFFENSIVE EFFICIENCY', fontsize=16)\n","plt.ylabel('DEFENSIVE EFFICIENCY', fontsize=16)\n","plt.legend(loc='best')\n","\n","plt.grid()\n","plt.tight_layout(pad=1)\n","\n","for i in tr_data_hub.index:\n","  plt.text(tr_data_hub['offensive-efficiency'][tr_data_hub.index==i],tr_data_hub['defensive-efficiency'][tr_data_hub.index==i],str(i), color='black')\n","\n","plt.show();"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Nc-U3JgZpI5g"},"outputs":[],"source":["# SCATTERPLOT - \n","plt.figure(figsize=(8,8))\n","sns.scatterplot(data=tr_data_hub, x='effective-field-goal-pct', y='assist--per--turnover-ratio', palette='mako', markers=True)\n","plt.title('EFF. FG % VS. ASSIST/TURNOVER %', fontsize=16)\n","plt.xlabel('EFF. FG %', fontsize=16)\n","plt.ylabel('ASSIST/TURNOVER %', fontsize=16)\n","plt.legend(loc='best')\n","\n","plt.grid()\n","plt.tight_layout(pad=1)\n","\n","for i in tr_data_hub.index:\n","  plt.text(tr_data_hub['effective-field-goal-pct'][tr_data_hub.index==i],tr_data_hub['assist--per--turnover-ratio'][tr_data_hub.index==i],str(i), color='black')\n","\n","plt.show();"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bII_2F7P48OA"},"outputs":[],"source":["# DFS - SCATTERPLOT - STOCKS\n","plt.figure(figsize=(8,8))\n","sns.scatterplot(data=tr_data_hub, x='stocks-per-game', y='opponent-stocks-per-game', palette='mako', markers=True)\n","plt.title('STOCKS VS. OPP STOCKS / GAME', fontsize=16)\n","plt.xlabel('STOCKS / GAME', fontsize=16)\n","plt.ylabel('OPP STOCKS / GAME', fontsize=16)\n","plt.legend(loc='best')\n","\n","plt.grid()\n","plt.tight_layout(pad=1)\n","\n","for i in tr_data_hub.index:\n","  plt.text(tr_data_hub['stocks-per-game'][tr_data_hub.index==i]+.01,tr_data_hub['opponent-stocks-per-game'][tr_data_hub.index==i]+.01,str(i), color='black')\n","\n","plt.show();"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ugGXiY2D9oNe","colab":{"base_uri":"https://localhost:8080/","height":917},"executionInfo":{"status":"ok","timestamp":1649050977839,"user_tz":240,"elapsed":17269,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"44cd615a-67ad-41de-f553-5f40c1621ba1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x1152 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1260x1260 with 56 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# PAIRPLOT\n","plt.figure(figsize=(16,16))\n","sns.pairplot(data=tr_top_features_df, palette='mako', markers=True)\n","#plt.title('PAIRPLOT - TOP CORRELATED FEATURES', fontsize=16)\n","#plt.xlabel('TBU', fontsize=16)\n","#plt.ylabel('TBU', fontsize=16)\n","#plt.legend(loc='best')\n","#plt.grid()\n","#plt.tight_layout(pad=1)\n","\n","plt.show();"]},{"cell_type":"markdown","metadata":{"id":"3ANJgcjz3E2p"},"source":["# MODELING PIPELINE"]},{"cell_type":"markdown","metadata":{"id":"usUxOLYrgg_U"},"source":["## IMPORTS"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aXa-iVxH3DYB"},"outputs":[],"source":["## LIBRARY IMPORTS\n","\n","import sys\n","#from google.colab import drive\n","\n","import numpy as np\n","import pandas as pd\n","\n","%tensorflow_version 2.x \n","import tensorflow as tf\n","from tensorflow import keras\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","\n","random_seed = 42\n","tf.random.set_seed(random_seed)\n","#import numpy as np\n","np.random.seed(random_seed)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3bhLnwOOgj86"},"outputs":[],"source":["# Absolute path of current folder\n","abspath_curr = '/content/drive/My Drive/SPORTS/NBA/'\n","\n","# Absolute path of shallow utilities folder\n","abspath_util_shallow = '/content/drive/My Drive/Colab Notebooks/teaching/gwu/machine_learning_I/spring_2022/code/utilities/p2_shallow_learning/'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eSnD1HlaezNN"},"outputs":[],"source":["# IMPORT \n","\n","#reg_szn_detail = pd.read_csv('drive/My Drive/SPORTS/NCAAB/data/MRegularSeasonDetailedResults.csv')\n","\n","#print(tourney_detail.head())\n","#print('-'*100)\n","#print(tourney_detail.info())\n","#print('-'*100)\n","#print(reg_szn_detail.head())\n","#print('-'*100)\n","#print(reg_szn_detail.info())"]},{"cell_type":"markdown","metadata":{"id":"UWIa1jzwo9UZ"},"source":["## FEATURE ENGINEERING"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PxkatjToOT06"},"outputs":[],"source":["#reg_szn_detail['WRatio'] = (reg_szn_detail.WCount / (reg_szn_detail.WCount + reg_szn_detail.LCount))\n","\n","#reg_szn_detail['WtdAvgMargin'] = ((reg_szn_detail['WCount'] * reg_szn_detail['AMarginAvg'] -\n","#                                reg_szn_detail['LCount'] * reg_szn_detail['BMarginAvg']) /\n","#                               (reg_szn_detail['WCount'] + reg_szn_detail['LCount'])\n","                               )\n","#reg_szn_detail.info()\n"]},{"cell_type":"markdown","metadata":{"id":"ZkV9DtckfCxa"},"source":["## TARGET"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c97zXZg-gHuZ"},"outputs":[],"source":["# GENERATE COLUMNS FOR TARGET VARIABLE PREDICTION\n","\n","#reg_szn_detail['ScoreMargin'] = reg_szn_detail['AScore'] - reg_szn_detail['BScore']\n","#reg_szn_detail['Win'] = (reg_szn_detail['ScoreMargin'] > 0).astype(int)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IAxOAVyLQU_b"},"outputs":[],"source":["# DROP COLUMNS\n","#reg_szn_detail.drop(['NumOT', 'ALoc', 'WCount', 'LCount', 'AMargin', 'BMargin', 'ATeamID', 'BTeamID', 'TeamID', 'DayNum', 'Season'], axis=1, inplace=True)\n","#reg_szn_detail.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zqrHNxevQOwU"},"outputs":[],"source":[""]},{"cell_type":"markdown","metadata":{"id":"8ODVeqMXhjMA"},"source":["## TRAIN-TEST"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HNixr0YiZb7C"},"outputs":[],"source":["# DEFINE TEST FEATURES\n","test_features = ['ScoreMargin',\n","                 'Win',\n","                 'AFGM',\n","     'BFGM',\n","     'AFGA',\n","     'BFGA', \n","     'AFGM3',\n","     'BFGM3',\n","     'AFGA3',\n","     'BFGA3',\n","     'AFTM',\n","     'BFTM', \n","     'AFTA',\n","     'BFTA',\n","    'AOR',\n","    'BOR',\n","    'ADR',\n","    'BDR',\n","     'AAst',\n","     'BAst',\n","     'ATO',\n","     'BTO',\n","     'AStl',\n","     'BStl', \n","     'ABlk',\n","     'BBlk',\n","     'APF',\n","     'BPF',\n","     'WtdAvgMargin',\n","     'WRatio',\n","]\n","\n","reg_szn_test = reg_szn_detail[test_features]\n","reg_szn_test.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xmrLYk1KZhW8"},"outputs":[],"source":["reg_szn_test.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GMm53nLtlx_G"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","train, test = train_test_split(reg_szn_test, train_size=0.8, random_state=42)\n","\n","# Load the raw training data\n","df_raw_train = train\n","\n","# Make a copy of df_raw_train\n","df_train = df_raw_train.copy(deep=True)\n","\n","# Load the raw test data\n","df_raw_test = test\n","\n","# Make a copy of df_raw_test\n","df_test = df_raw_test.copy(deep=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KyFbk9F8cIKM"},"outputs":[],"source":["## TARGET VARIABLE ASSIGNMENT\n","\n","target = 'Win'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J2EWveE2gONi"},"outputs":[],"source":["# Print the dimension of df_train\n","pd.DataFrame([[df_train.shape[0], df_train.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tgb8_Ug7iWcZ"},"outputs":[],"source":["# Print the dimension of df_test\n","pd.DataFrame([[df_test.shape[0], df_test.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2IMZ-TdGiWUU"},"outputs":[],"source":["# Print the first 5 rows of df_train\n","df_train.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lAEUUyIFiWH7"},"outputs":[],"source":["# Print the first 5 rows of df_test\n","df_test.head()"]},{"cell_type":"markdown","metadata":{"id":"Nl1UC6MxidAB"},"source":["## SPLIT"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uafx3fHzmvAU"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","# Divide the training data into training (80%) and validation (20%)\n","df_train, df_val = train_test_split(df_train, train_size=0.8, random_state=random_seed)\n","\n","# Reset the index\n","df_train, df_val = df_train.reset_index(drop=True), df_val.reset_index(drop=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UHhNX6ism56I"},"outputs":[],"source":["# Print the dimension of df_train\n","pd.DataFrame([[df_train.shape[0], df_train.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1jtWDanzm6Hu"},"outputs":[],"source":["# Print the dimension of df_val\n","pd.DataFrame([[df_val.shape[0], df_val.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4QkLVMWQncQ2"},"outputs":[],"source":["# Combine df_train, df_val and df_test\n","df = pd.concat([df_train, df_val, df_test], sort=False)\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tGa3GtHNdzhO"},"outputs":[],"source":[""]},{"cell_type":"markdown","metadata":{"id":"hCrfAAiYin-n"},"source":["## LABEL ENCODER"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EDcHsd-ZiqcO"},"outputs":[],"source":["from sklearn.preprocessing import LabelEncoder\n","\n","# The LabelEncoder\n","le = LabelEncoder()\n","\n","# Encode categorical target in the combined data\n","df[target] = le.fit_transform(df[target])\n","\n","# Print the first 5 rows of df\n","df.head()"]},{"cell_type":"markdown","metadata":{"id":"fbM0hZtdSXUi"},"source":["## PRE-PROCESSING"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QXygJyLOofxp"},"outputs":[],"source":["#df.drop(['id'], inplace=True,  axis=1)\n","#df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3eliElTTm6ia"},"outputs":[],"source":["# Separating the training data\n","df_train = df.iloc[:df_train.shape[0], :]\n","\n","# Separating the validation data\n","df_val = df.iloc[df_train.shape[0]:df_train.shape[0] + df_val.shape[0], :]\n","\n","# Separating the test data\n","df_test = df.iloc[df_train.shape[0] + df_val.shape[0]:, :]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bf2325Sjm6xM"},"outputs":[],"source":["# Print the dimension of df_train\n","pd.DataFrame([[df_train.shape[0], df_train.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CS_125FknKMU"},"outputs":[],"source":["# Print the dimension of df_val\n","pd.DataFrame([[df_val.shape[0], df_val.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ELcNjqgqnKa6"},"outputs":[],"source":["# Print the dimension of df_test\n","pd.DataFrame([[df_test.shape[0], df_test.shape[1]]], columns=['# rows', '# columns'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gDAe1F5pnOI4"},"outputs":[],"source":["# Combine df_train, df_val and df_test\n","df = pd.concat([df_train, df_val, df_test], sort=False)"]},{"cell_type":"markdown","metadata":{"id":"S8FIHphzirfn"},"source":["## FEATURE MATRIX"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ss_7HjdTi7tk"},"outputs":[],"source":["# Get the feature matrix\n","X_train = df_train[np.setdiff1d(df_train.columns, [target])].values\n","X_val = df_val[np.setdiff1d(df_val.columns, [target])].values\n","X_test = df_test[np.setdiff1d(df_test.columns, [target])].values\n","\n","# Get the target vector\n","y_train = df_train[target].values\n","y_val = df_val[target].values\n","y_test = df_test[target].values"]},{"cell_type":"markdown","metadata":{"id":"qoZe3Trki-D-"},"source":["## SCALE"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5SLBuWN-jAM3"},"outputs":[],"source":["from sklearn.preprocessing import MinMaxScaler\n","\n","# MinMaxScaler\n","mms = MinMaxScaler()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D5vYCo2IjArX"},"outputs":[],"source":["# Normalize the training data\n","X_train = mms.fit_transform(X_train)\n","\n","# Normalize the validation data\n","X_val = mms.transform(X_val)\n","\n","# Normalize the test data\n","X_test = mms.transform(X_test)"]},{"cell_type":"markdown","metadata":{"id":"oZl9LDdbkTV8"},"source":["# HYPERPARAMETER TUNING"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IruKG0UmkTV8"},"outputs":[],"source":["# Model / Package Imports\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","#from sklearn.experimental import enable_hist_gradient_boosting\n","#from sklearn.ensemble import HistGradientBoostingClassifier\n","\n","# Creating dictionary of the models\n","models = {'lr': LogisticRegression(class_weight='balanced', random_state=random_seed),\n","          'mlpc': MLPClassifier(early_stopping=True, random_state=random_seed),\n","          'rfc': RandomForestClassifier(class_weight='balanced', random_state=random_seed),\n","          #'hgbc': HistGradientBoostingClassifier(random_state=random_seed)\n","          }"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JXR-KWh2lBgr"},"outputs":[],"source":["# Creating the dictionary of the pipelines\n","from sklearn.pipeline import Pipeline\n","\n","pipes = {}\n","\n","for acronym, model in models.items():\n","    pipes[acronym] = Pipeline([('model', model)])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":661,"status":"ok","timestamp":1647497150825,"user":{"displayName":"Nate Ehat","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01467513665981823629"},"user_tz":240},"id":"P6VWIlNGg3Af","outputId":"547b69ec-70cc-44c4-d2b6-5d7dfd6b0e56"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/teaching/gwu/machine_learning_I/spring_2022/code/utilities/p2_shallow_learning\n"]}],"source":["## SUPPLEMENTAL - NOT NECESSARY\n","\n","# Change working directory to the absolute path of the shallow utilities folder\n","%cd $abspath_util_shallow\n","\n","# Import the shallow utitilities\n","%run pmlm_utilities_shallow.ipynb"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iqJmzdN3lBaF"},"outputs":[],"source":["#Getting the predefined split cross-validator\n","  # feature matrix and target velctor in the combined training and validation data\n","  # target vector in the combined training and validation data\n","  # PredefinedSplit\n","  # See the implementation in pmlm_utilities.ipynb\n","\n","X_train_val, y_train_val, ps = get_train_val_ps(X_train, y_train, X_val, y_val)"]},{"cell_type":"markdown","metadata":{"id":"KS8ta-DilVt4"},"source":["## GridSearch CV Param Grids"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZVC6gMGJlQN4"},"outputs":[],"source":["param_grids = {}"]},{"cell_type":"markdown","metadata":{"id":"AOG6now0vvRA"},"source":["## Logistic Regression"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sfpiyyL6lQGC"},"outputs":[],"source":["# The parameter grid of tol\n","tol_grid = [10 ** -5, 10 ** -3] #10 ** -11, \n","  # ORIGINAL: tol_grid = [10 ** -5, 10 ** -4, 10 ** -3]\n","\n","# The parameter grid of C\n","C_grid = [10, 1, .1, 0.01] # 1 , .001\n","  # ORIGINAL: C_grid = [0.1, 1, 10]\n","\n","# The parameter grid of penalty type\n","penalty_grid = ['none', 'l1', 'l2'] #, 'elasticnet'\n","\n","# The parameter grid of solver type\n","solver_grid = ['newton-cg', 'lbfgs', 'liblinear'] # 'sag', 'saga'\n","\n","# Update param_grids\n","param_grids['lr'] = [{'model__tol': tol_grid,\n","                      'model__C': C_grid,\n","                      #'model__penalty': penalty_grid,\n","                      'model__solver': solver_grid,\n","                      }]"]},{"cell_type":"markdown","metadata":{"id":"UKPlOan4v48O"},"source":["## MLP Classifier"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"75KaQQpQlXbE"},"outputs":[],"source":["# The grids for alpha\n","alpha_grids = [10 ** i for i in range(-5, -2)]\n","  # ORIGINAL: alpha_grids = [10 ** i for i in range(-5, -2)]\n","\n","# The grids for learning_rate_init\n","learning_rate_init_grids = [9 ** i for i in range(-3, -1)]\n","  # ORIGINAL: learning_rate_init_grids = [10 ** i for i in range(-4, -1)]\n","\n","# Update param_grids\n","param_grids['mlpc'] = [{'model__alpha': alpha_grids,\n","                        'model__learning_rate_init': learning_rate_init_grids}]"]},{"cell_type":"markdown","metadata":{"id":"in6p-qHnv7-R"},"source":["## Random Forest Classifier"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qb-Wrovzvs1e"},"outputs":[],"source":["# The grids for min_samples_split\n","min_samples_split_grids = [20, 100]\n","  # ORIGINAL: min_samples_split_grids = [2, 20, 100]\n","\n","# The grids for min_samples_leaf\n","min_samples_leaf_grids = [1, 100]\n","  # ORIGINAL: min_samples_leaf_grids = [1, 20, 100]\n","\n","# The grids for n_estimators\n","n_estimators_grids = [100] # 10, 50, 100\n","\n","# The grids for max_depth\n","max_depth_grids = [1, 5, 10]\n","\n","# The grids for max_features\n","max_features_grids = ['auto', 'sqrt']\n","\n","# Update param_grids\n","param_grids['rfc'] = [{'model__min_samples_split': min_samples_split_grids,\n","                       'model__min_samples_leaf': min_samples_leaf_grids,\n","                       'model__n_estimators': n_estimators_grids,\n","                       #'model__max_depth': max_depth_grids,\n","                       #'model__max_features': max_features_grids,\n","                       }]\n","\n","                       # model__max_depth: "]},{"cell_type":"markdown","metadata":{"id":"COEUkeSujw6y"},"source":["## GRIDSEARCH"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fXvemf-DdqXM"},"outputs":[],"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"elIljmhtlawI"},"outputs":[],"source":["import os\n","# Make directory\n","directory = os.path.dirname(abspath_curr + '/result/mm2022/GridSearchCV_results/')\n","if not os.path.exists(directory):\n","    os.makedirs(directory)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1zMvf0SulbGU"},"outputs":[],"source":["# HYPERPARAMETER TUNING\n","\n","from sklearn.model_selection import GridSearchCV\n","\n","# The list of [best_score_, best_params_, best_estimator_] obtained by GridSearchCV\n","best_score_params_estimator_gs = []\n","\n","# For each model\n","for acronym in pipes.keys():\n","    # GridSearchCV\n","    gs = GridSearchCV(estimator=pipes[acronym],\n","                      param_grid=param_grids[acronym],\n","                      scoring='f1_macro',\n","                      n_jobs=2, #8\n","                      cv=ps, #5\n","                      return_train_score=True)\n","        \n","    # Fit the pipeline\n","    gs = gs.fit(X_train_val, y_train_val)\n","    \n","    # Update best_score_params_estimator_gs\n","    best_score_params_estimator_gs.append([gs.best_score_, gs.best_params_, gs.best_estimator_])\n","    \n","    # Sort cv_results in ascending order of 'rank_test_score' and 'std_test_score'\n","    cv_results = pd.DataFrame.from_dict(gs.cv_results_).sort_values(by=['rank_test_score', 'std_test_score'])\n","    \n","    # Get the important columns in cv_results\n","    important_columns = ['rank_test_score',\n","                         'mean_test_score', \n","                         'std_test_score', \n","                         'mean_train_score', \n","                         'std_train_score',\n","                         'mean_fit_time', \n","                         'std_fit_time',                        \n","                         'mean_score_time', \n","                         'std_score_time']\n","    \n","    # Move the important columns ahead\n","    cv_results = cv_results[important_columns + sorted(list(set(cv_results.columns) - set(important_columns)))]\n","\n","    # Write cv_results file\n","    cv_results.to_csv(path_or_buf=abspath_curr + '/result/mm2022/GridSearchCV_results/' + acronym + '.csv', index=False) #'/result/mnist/cv_results/GridSearchCV/'\n","\n","# Sort best_score_params_estimator_gs in descending order of the best_score_\n","best_score_params_estimator_gs = sorted(best_score_params_estimator_gs, key=lambda x : x[0], reverse=True)\n","\n","# Print best_score_params_estimator_gs\n","pd.DataFrame(best_score_params_estimator_gs, columns=['best_score', 'best_param', 'best_estimator'])"]},{"cell_type":"markdown","metadata":{"id":"kOF6id8le32I"},"source":["## MODEL SELECTION"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HSjxOgI7Wyi1"},"outputs":[],"source":["# Get the best_score, best_params and best_estimator obtained by GridSearchCV\n","best_score_gs, best_params_gs, best_estimator_gs = best_score_params_estimator_gs[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1646788866688,"user":{"displayName":"Nate Ehat","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01467513665981823629"},"user_tz":300},"id":"82gfh1eEmpb0","outputId":"fdf5b5f2-bfb8-4721-c088-b5c371f1d6ae"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.2633100340428174\n","{'model__alpha': 0.001, 'model__learning_rate_init': 0.012345679012345678}\n","Pipeline(steps=[('model',\n","                 MLPClassifier(alpha=0.001, early_stopping=True,\n","                               learning_rate_init=0.012345679012345678,\n","                               random_state=42))])\n"]}],"source":["print(best_score_gs)\n","print(best_params_gs)\n","print(best_estimator_gs)"]},{"cell_type":"markdown","metadata":{"id":"fiEBpqc_e32K"},"source":["# GENERATE SUBMISSION FILE\n","###### Use best model as selected above to generate submission file for Kaggle competition:"]},{"cell_type":"markdown","metadata":{"id":"Aw5WYTRGz65s"},"source":["## Create Directory"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z0oLcggN0C9W"},"outputs":[],"source":["# Make directory\n","directory = os.path.dirname(abspath_curr + '/result/submission/')\n","if not os.path.exists(directory):\n","    os.makedirs(directory)"]},{"cell_type":"markdown","metadata":{"id":"y-Qf_8VM0Tt9"},"source":["## Generate Submission"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mVdD3N0re32L","scrolled":true},"outputs":[],"source":["# Get the prediction on the testing data using best_model\n","y_test_pred = best_estimator_gs.predict(X_test)\n","\n","# Transform y_test_pred back to the original class\n","y_test_pred = le.inverse_transform(y_test_pred)\n","\n","# Get the submission dataframe\n","df_submit = pd.DataFrame(np.hstack((np.arange(1, y_test_pred.shape[0] + 1).reshape(-1, 1), y_test_pred.reshape(-1, 1))),\n","                         columns=['id', target]).astype({'id':int, target:int})                                                                                      \n","\n","# Generate the submission file\n","df_submit.to_csv(abspath_curr + '/result/submission/submission.csv', index=False)                                                                              "]},{"cell_type":"markdown","metadata":{"id":"IZCGr7s09cDG"},"source":["# INTERPRETATION"]},{"cell_type":"markdown","metadata":{"id":"D3dqG5SHLlPk"},"source":["## Create Directory"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BNm50FFQ9cDH"},"outputs":[],"source":["import os\n","\n","# Make directory\n","directory = os.path.dirname(abspath_curr + '/result/figure/')\n","if not os.path.exists(directory):\n","    os.makedirs(directory)"]},{"cell_type":"markdown","metadata":{"id":"733hk_XD9cDI"},"source":["## Feature Importance - Table"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-NLAjG6K9cDJ"},"outputs":[],"source":["# Get the best_score, best_param and best_estimator of random forest obtained by GridSearchCV\n","best_score_rfc, best_param_rfc, best_estimator_rfc = best_score_params_estimator_gs[1]\n","\n","# Get the dataframe of feature and importance\n","df_fi_rfc = pd.DataFrame(np.hstack((np.setdiff1d(df.columns, [target]).reshape(-1, 1), best_estimator_rfc.named_steps['model'].feature_importances_.reshape(-1, 1))),\n","                         columns=['Features', 'Importance'])\n","\n","# Sort df_fi_rfc in descending order of the importance\n","df_fi_rfc = df_fi_rfc.sort_values(ascending=False, by='Importance').reset_index(drop=True)\n","\n","# Print the first 5 rows of df_fi_rfc\n","df_fi_rfc[:]"]},{"cell_type":"markdown","metadata":{"id":"-Tjfao_xLlPo"},"source":["## Feature Importance - Plot"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Tdo0imMv9cDK","scrolled":true},"outputs":[],"source":["# Create a figure\n","fig = plt.figure(figsize=(10, 5))\n","\n","# The bar plot of the top 5 feature importance\n","plt.bar(df_fi_rfc['Features'][:5], df_fi_rfc['Importance'][:5], color='green')\n","\n","# Set x-axis\n","plt.xlabel('Features')\n","plt.xticks(rotation=90)\n","\n","# Set y-axis\n","plt.ylabel('Importance')\n","\n","# Save and show the figure\n","plt.tight_layout()\n","plt.savefig(abspath_curr + '/result/poker/figure/feature_importance_rfc.pdf')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"RcyNzbII3BR1"},"source":["# SCRATCH NOTES"]},{"cell_type":"markdown","metadata":{"id":"S3TPza1g_VGy"},"source":["## PCA"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cdZoRTVQJZ7m"},"outputs":[],"source":["#%%\n","\n","X = df[features].values\n","X = StandardScaler().fit_transform(X)\n","\n","#%%\n","pca = PCA(n_components='mle', svd_solver='full') # 'mle'\n","\n","pca.fit(X)\n","X_PCA = pca.transform(X)\n","print('ORIGINAL DIMENSIONS:', X.shape)\n","print('TRANSFORMED DIMENSIONS:', X_PCA.shape)\n","print(f'EXPLAINED VARIANCE RATIO: {pca.explained_variance_ratio_}')\n","\n","#%%\n","x = np.arange(1, len(np.cumsum(pca.explained_variance_ratio_))+1, 1)\n","\n","plt.figure(figsize=(12,8))\n","plt.plot(x, np.cumsum(pca.explained_variance_ratio_))\n","plt.xticks(x)\n","\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"KKBT7EqP_cFR"},"source":["## SVD"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S-jSehGW_bYy"},"outputs":[],"source":["# SINGULAR VALUE DECOMPOSITION ANALYSIS [SVD]\n","# CONDITION NUMBER\n","\n","# ORIGINAL DATA\n","\n","from numpy import linalg as LA\n","\n","H = np.matmul(X.T, X)\n","_, d, _ = np.linalg.svd(H)\n","print(f'ORIGINAL DATA: SINGULAR VALUES {d}')\n","print(f'ORIGINAL DATA: CONDITIONAL NUMBER {LA.cond(X)}')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9jxCphjMJZ4s"},"outputs":[],"source":["# TRANSFORMED DATA\n","H_PCA = np.matmul(X_PCA.T, X_PCA)\n","_, d_PCA, _ = np.linalg.svd(H_PCA)\n","print(f'TRANSFORMED DATA: SINGULAR VALUES {d_PCA}')\n","print(f'TRANSFORMED DATA: CONDITIONAL NUMBER {LA.cond(X_PCA)}')\n","print('*'*58)\n","\n","#%%\n","# CONSTRUCTION OF REDUCED DIMENSION DATASET\n","\n","#pca_df = pca.explained_variance_ratio_\n","\n","a, b = X_PCA.shape\n","column = []\n","\n","for i in range(b):\n","    column.append(f'PRINCIPAL COLUMN {i+1}')\n","\n","df_PCA = pd.DataFrame(data=X_PCA, columns=column)\n","df_PCA = pd.concat([df_PCA, Y], axis=1)\n","\n","df_PCA.info()"]},{"cell_type":"markdown","source":["# BASKETBALL REFERENCE"],"metadata":{"id":"6sFp82JaIeou"}},{"cell_type":"markdown","source":["https://github.com/vishaalagartha/basketball_reference_scraper/blob/master/examples.py"],"metadata":{"id":"TIYDhAvlNw8T"}},{"cell_type":"markdown","source":["## HISTORICAL MATCHUPS"],"metadata":{"id":"6YNtBNeqRXSH"}},{"cell_type":"markdown","source":["### STAT VARIABLES"],"metadata":{"id":"B0O2lXZqiITZ"}},{"cell_type":"code","source":["# Start Date fixed to reflect modern-day NBA Expansion to 30 teams in 2004\n","\n","current_date = '2022-03-30'\n","current_year = 2022\n","\n","start_2004 = '2003-11-01'\n","start_2000 = '1999-11-01'\n","start_2010 = '2009-11-01'\n","\n","\n","team_code_dict = {'Charlotte Hornets':'CHO', 'Dallas Mavericks':'DAL', 'Denver Nuggets':'DEN',\n","                  'Houston Rockets':'HOU', 'Los Angeles Clippers':'LAC', 'Miami Heat':'MIA',\n","                  'New Jersey Nets':'BRK', 'New York Knicks':'NYK', 'San Antonio Spurs':'SAS',\n","                  'Toronto Raptors':'TOR', 'Utah Jazz':'UTA', 'Vancouver Grizzlies':'MEM',\n","                  'Washington Wizards':'WAS', 'Boston Celtics':'BOS', 'Chicago Bulls':'CHI',\n","                  'Cleveland Cavaliers':'CLE', 'Los Angeles Lakers':'LAL', 'Orlando Magic':'ORL',\n","                  'Portland Trail Blazers':'POR', 'Atlanta Hawks':'ATL', 'Phoenix Suns':'PHO',\n","                  'Seattle SuperSonics':'OKC', 'Detroit Pistons':'DET', 'Sacramento Kings':'SAC',\n","                  'Golden State Warriors':'GSW', 'Indiana Pacers':'IND', 'Milwaukee Bucks':'MIL',\n","                  'Minnesota Timberwolves':'MIN', 'Philadelphia 76ers':'PHI', 'Memphis Grizzlies':'MEM',\n","                  'New Orleans Hornets':'NOP', 'Charlotte Bobcats':'CHO', 'New Orleans/Oklahoma City Hornets':'NOP',\n","                  'Oklahoma City Thunder':'OKC', 'Brooklyn Nets':'BRK', 'New Orleans Pelicans':'NOP'\n","                  }\n","\n","                  # PENDING CODE CONVERSION / MAPPING:\n","                    # PHO = PHX\n","                    # CHO = CHA\n","                    # BRK = BKN\n","\n","team_codes = team_code_dict.values()\n","print(team_codes)"],"metadata":{"id":"OAVQtj2giHa6","executionInfo":{"status":"ok","timestamp":1648942198619,"user_tz":240,"elapsed":491,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"5fe15af7-2c07-406f-88bb-af1be0cbe284"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dict_values(['CHO', 'DAL', 'DEN', 'HOU', 'LAC', 'MIA', 'BRK', 'NYK', 'SAS', 'TOR', 'UTA', 'MEM', 'WAS', 'BOS', 'CHI', 'CLE', 'LAL', 'ORL', 'POR', 'ATL', 'PHO', 'OKC', 'DET', 'SAC', 'GSW', 'IND', 'MIL', 'MIN', 'PHI', 'MEM', 'NOP', 'CHO', 'NOP', 'OKC', 'BRK', 'NOP'])\n"]}]},{"cell_type":"markdown","source":["### DATA IMPORT"],"metadata":{"id":"bNnBTV5b-jZ-"}},{"cell_type":"code","source":["matchup_filepath = 'drive/My Drive/GWU/TEAM-7/data/historical_matchups'"],"metadata":{"id":"HwD3pGEvALJ5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["matchup_history = pd.read_excel(matchup_filepath + '.xlsx', index_col='DATE')\n","#matchup_history = pd.read_csv(matchup_filepath + '.csv', index_col='DATE')"],"metadata":{"id":"2_egNXpH-kcX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### PRE-PROCESSING"],"metadata":{"id":"psLjRtM4K-Ii"}},{"cell_type":"code","source":["print(matchup_history.columns)\n","print('-'*100)\n","print(matchup_history.info())\n","print('-'*100)\n","print(matchup_history.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x9A7vY47K_7F","executionInfo":{"status":"ok","timestamp":1648662068309,"user_tz":240,"elapsed":166,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"59da41d2-b724-476e-8149-37d26cdc1894"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['VISITOR', 'VISITOR_PTS', 'HOME', 'HOME_PTS'], dtype='object')\n","----------------------------------------------------------------------------------------------------\n","<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 26502 entries, 1999-11-02 to 2022-04-10\n","Data columns (total 4 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   VISITOR      26502 non-null  object \n"," 1   VISITOR_PTS  26377 non-null  float64\n"," 2   HOME         26502 non-null  object \n"," 3   HOME_PTS     26377 non-null  float64\n","dtypes: float64(2), object(2)\n","memory usage: 1.0+ MB\n","None\n","----------------------------------------------------------------------------------------------------\n","                          VISITOR  VISITOR_PTS                  HOME  HOME_PTS\n","DATE                                                                          \n","1999-11-02          Orlando Magic         86.0     Charlotte Hornets     100.0\n","1999-11-02  Golden State Warriors         96.0      Dallas Mavericks     108.0\n","1999-11-02           Phoenix Suns        102.0        Denver Nuggets     107.0\n","1999-11-02        Milwaukee Bucks         98.0       Houston Rockets      93.0\n","1999-11-02    Seattle SuperSonics        104.0  Los Angeles Clippers      92.0\n"]}]},{"cell_type":"code","source":["matchup_history['HOME'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2ntU0XwkLf0t","executionInfo":{"status":"ok","timestamp":1648662073368,"user_tz":240,"elapsed":111,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"095d458d-4afe-4120-8f04-cd051311d0ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Charlotte Hornets', 'Dallas Mavericks', 'Denver Nuggets',\n","       'Houston Rockets', 'Los Angeles Clippers', 'Miami Heat',\n","       'New Jersey Nets', 'New York Knicks', 'San Antonio Spurs',\n","       'Toronto Raptors', 'Utah Jazz', 'Vancouver Grizzlies',\n","       'Washington Wizards', 'Boston Celtics', 'Chicago Bulls',\n","       'Cleveland Cavaliers', 'Los Angeles Lakers', 'Orlando Magic',\n","       'Portland Trail Blazers', 'Atlanta Hawks', 'Phoenix Suns',\n","       'Seattle SuperSonics', 'Detroit Pistons', 'Sacramento Kings',\n","       'Golden State Warriors', 'Indiana Pacers', 'Milwaukee Bucks',\n","       'Minnesota Timberwolves', 'Philadelphia 76ers',\n","       'Memphis Grizzlies', 'New Orleans Hornets', 'Charlotte Bobcats',\n","       'New Orleans/Oklahoma City Hornets', 'Oklahoma City Thunder',\n","       'Brooklyn Nets', 'New Orleans Pelicans'], dtype=object)"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["matchup_history['VISITOR_CODE'] = matchup_history['VISITOR'].map(team_code_dict)\n","matchup_history['HOME_CODE'] = matchup_history['HOME'].map(team_code_dict)\n","matchup_history['VISITOR_MARGIN'] = matchup_history['VISITOR_PTS'] - matchup_history['HOME_PTS']\n","matchup_history['HOME_MARGIN'] = matchup_history['HOME_PTS'] - matchup_history['VISITOR_PTS']\n","\n","matchup_history.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mcoKRwLBLuCz","executionInfo":{"status":"ok","timestamp":1648662075318,"user_tz":240,"elapsed":153,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"97c974c3-1012-44ab-90dc-c5a5c355ab9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 26502 entries, 1999-11-02 to 2022-04-10\n","Data columns (total 8 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   VISITOR         26502 non-null  object \n"," 1   VISITOR_PTS     26377 non-null  float64\n"," 2   HOME            26502 non-null  object \n"," 3   HOME_PTS        26377 non-null  float64\n"," 4   VISITOR_CODE    26502 non-null  object \n"," 5   HOME_CODE       26502 non-null  object \n"," 6   VISITOR_MARGIN  26377 non-null  float64\n"," 7   HOME_MARGIN     26377 non-null  float64\n","dtypes: float64(4), object(4)\n","memory usage: 1.8+ MB\n"]}]},{"cell_type":"code","source":["matchup_history"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"pN7TgFayWzqg","executionInfo":{"status":"ok","timestamp":1648662079398,"user_tz":240,"elapsed":258,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"1aa80112-dcc4-4ef9-8656-15cf9fdaa5f0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          VISITOR  VISITOR_PTS                  HOME  \\\n","DATE                                                                   \n","1999-11-02          Orlando Magic         86.0     Charlotte Hornets   \n","1999-11-02  Golden State Warriors         96.0      Dallas Mavericks   \n","1999-11-02           Phoenix Suns        102.0        Denver Nuggets   \n","1999-11-02        Milwaukee Bucks         98.0       Houston Rockets   \n","1999-11-02    Seattle SuperSonics        104.0  Los Angeles Clippers   \n","...                           ...          ...                   ...   \n","2022-04-10     Los Angeles Lakers          NaN        Denver Nuggets   \n","2022-04-10      San Antonio Spurs          NaN      Dallas Mavericks   \n","2022-04-10        Milwaukee Bucks          NaN   Cleveland Cavaliers   \n","2022-04-10     Washington Wizards          NaN     Charlotte Hornets   \n","2022-04-10         Indiana Pacers          NaN         Brooklyn Nets   \n","\n","            HOME_PTS VISITOR_CODE HOME_CODE  VISITOR_MARGIN  HOME_MARGIN  \n","DATE                                                                      \n","1999-11-02     100.0          ORL       CHO           -14.0         14.0  \n","1999-11-02     108.0          GSW       DAL           -12.0         12.0  \n","1999-11-02     107.0          PHO       DEN            -5.0          5.0  \n","1999-11-02      93.0          MIL       HOU             5.0         -5.0  \n","1999-11-02      92.0          OKC       LAC            12.0        -12.0  \n","...              ...          ...       ...             ...          ...  \n","2022-04-10       NaN          LAL       DEN             NaN          NaN  \n","2022-04-10       NaN          SAS       DAL             NaN          NaN  \n","2022-04-10       NaN          MIL       CLE             NaN          NaN  \n","2022-04-10       NaN          WAS       CHO             NaN          NaN  \n","2022-04-10       NaN          IND       BRK             NaN          NaN  \n","\n","[26502 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-eefc2c36-9571-40ee-8a9a-72be773edfaa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VISITOR</th>\n","      <th>VISITOR_PTS</th>\n","      <th>HOME</th>\n","      <th>HOME_PTS</th>\n","      <th>VISITOR_CODE</th>\n","      <th>HOME_CODE</th>\n","      <th>VISITOR_MARGIN</th>\n","      <th>HOME_MARGIN</th>\n","    </tr>\n","    <tr>\n","      <th>DATE</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1999-11-02</th>\n","      <td>Orlando Magic</td>\n","      <td>86.0</td>\n","      <td>Charlotte Hornets</td>\n","      <td>100.0</td>\n","      <td>ORL</td>\n","      <td>CHO</td>\n","      <td>-14.0</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>1999-11-02</th>\n","      <td>Golden State Warriors</td>\n","      <td>96.0</td>\n","      <td>Dallas Mavericks</td>\n","      <td>108.0</td>\n","      <td>GSW</td>\n","      <td>DAL</td>\n","      <td>-12.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>1999-11-02</th>\n","      <td>Phoenix Suns</td>\n","      <td>102.0</td>\n","      <td>Denver Nuggets</td>\n","      <td>107.0</td>\n","      <td>PHO</td>\n","      <td>DEN</td>\n","      <td>-5.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1999-11-02</th>\n","      <td>Milwaukee Bucks</td>\n","      <td>98.0</td>\n","      <td>Houston Rockets</td>\n","      <td>93.0</td>\n","      <td>MIL</td>\n","      <td>HOU</td>\n","      <td>5.0</td>\n","      <td>-5.0</td>\n","    </tr>\n","    <tr>\n","      <th>1999-11-02</th>\n","      <td>Seattle SuperSonics</td>\n","      <td>104.0</td>\n","      <td>Los Angeles Clippers</td>\n","      <td>92.0</td>\n","      <td>OKC</td>\n","      <td>LAC</td>\n","      <td>12.0</td>\n","      <td>-12.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-10</th>\n","      <td>Los Angeles Lakers</td>\n","      <td>NaN</td>\n","      <td>Denver Nuggets</td>\n","      <td>NaN</td>\n","      <td>LAL</td>\n","      <td>DEN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-10</th>\n","      <td>San Antonio Spurs</td>\n","      <td>NaN</td>\n","      <td>Dallas Mavericks</td>\n","      <td>NaN</td>\n","      <td>SAS</td>\n","      <td>DAL</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-10</th>\n","      <td>Milwaukee Bucks</td>\n","      <td>NaN</td>\n","      <td>Cleveland Cavaliers</td>\n","      <td>NaN</td>\n","      <td>MIL</td>\n","      <td>CLE</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-10</th>\n","      <td>Washington Wizards</td>\n","      <td>NaN</td>\n","      <td>Charlotte Hornets</td>\n","      <td>NaN</td>\n","      <td>WAS</td>\n","      <td>CHO</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-10</th>\n","      <td>Indiana Pacers</td>\n","      <td>NaN</td>\n","      <td>Brooklyn Nets</td>\n","      <td>NaN</td>\n","      <td>IND</td>\n","      <td>BRK</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>26502 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eefc2c36-9571-40ee-8a9a-72be773edfaa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eefc2c36-9571-40ee-8a9a-72be773edfaa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eefc2c36-9571-40ee-8a9a-72be773edfaa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":[""],"metadata":{"id":"b4tcOXj2c7u5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["matchup_history.dropna(inplace=True)\n","matchup_history.info()"],"metadata":{"id":"gRwokpY3LCVm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1648662102282,"user_tz":240,"elapsed":7,"user":{"displayName":"Nate Ehat","userId":"01467513665981823629"}},"outputId":"1cbc5c77-854c-4252-91aa-7960a6b3369b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 26377 entries, 1999-11-02 to 2022-03-25\n","Data columns (total 8 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   VISITOR         26377 non-null  object \n"," 1   VISITOR_PTS     26377 non-null  float64\n"," 2   HOME            26377 non-null  object \n"," 3   HOME_PTS        26377 non-null  float64\n"," 4   VISITOR_CODE    26377 non-null  object \n"," 5   HOME_CODE       26377 non-null  object \n"," 6   VISITOR_MARGIN  26377 non-null  float64\n"," 7   HOME_MARGIN     26377 non-null  float64\n","dtypes: float64(4), object(4)\n","memory usage: 1.8+ MB\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"aZnjkuBqLFPs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"dQomOPzJLFyp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"OoYGMVO2LGON"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### DATA VIZ"],"metadata":{"id":"xzVelU4CDlcK"}},{"cell_type":"code","source":["plt.figure(figsize=(12,10))\n","sns.histplot(matchup_history['HOME_CODE'], palette='mako') #, rug=True\n","\n","#plt.title('', fontsize=16)\n","#plt.xlabel('', fontsize=16)\n","#plt.ylabel('', fontsize=16)\n","plt.legend(loc='best')\n","\n","plt.grid()\n","plt.tight_layout(pad=1)\n","\n","plt.show();"],"metadata":{"id":"_RdOPiD1E8Xq"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":["oZl9LDdbkTV8","fiEBpqc_e32K","IZCGr7s09cDG","733hk_XD9cDI","-Tjfao_xLlPo","RcyNzbII3BR1","6sFp82JaIeou","B0O2lXZqiITZ","bNnBTV5b-jZ-","psLjRtM4K-Ii"],"name":"NBA_Current","provenance":[{"file_id":"1T4jl3cmhlUh3VnLwC_LHFP9Jmo-aV0-i","timestamp":1649219073155}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}